/*
 * HTML
 */
html {
	line-height: normal;
	font-family: serif;
	width: 100%;
	margin: 0;
	padding: 0;
}

body {
	width: 100%;
	margin: 0;
	padding: 0;
}

*:focus {
	#no-outline;
}

h1, h2, h3, h4, h5, h6 {
	margin: 0;
}

p {
	margin: 0;
}

a {
	img {
		border: none;
		display: block;
	}
}

/*
 * HTML5
 */
section, nav, article, footer, header, menu, aside, figure, figcaption {
	display: block;
	margin: 0;
	padding: 0;
	position: static;
}

input, textarea, keygen, select, button {
	font-family: serif;
}

figure {
	margin: 0;
}

blockquote {
	margin: 0;
	padding: 0;
}

address {
	font-style: normal;
}

/*
 * FORMS
 */
button {
	margin: 0;
	padding: 0;
	border: none;
	background: none;
}

/* 
 * CSS 3
 */
* {
	-webkit-tap-highlight-color: rgba(0,0,0,0);
	-webkit-font-smoothing: antialiased;
	-webkit-text-size-adjust: none;
}

/*
 * SVG
 */
svg {
	text, textpath {
		alignment-baseline: central;
		text-rendering: geometricPrecision;
	}
}



//=========================
// = RESPONSIVE FONT SIZE FOR REM
//=========================

html {
	font-size: 37.5%;
	
	#mq-min-px-ratio(1.5, {
		font-size: 31.25%;
		
		#mq-min-width(@screen-xs, {
			font-size: 37.5%;
		});
	});
	
	#mq-min-width(@screen-xs, {
		font-size: 50%;
	});

	#mq-min-width(@screen-md, {
		font-size: 62.5%;
	});
}
 
//=========================
// = BACKFACE-VISIBILITY CLASS
//=========================

.backface-visibility-hidden {
	.DEPRECATED(~' Use .backface-hidden');
	#backface();
}

.backface-visible 	{ #backface(visible); }
.backface-hidden 	{ #backface(); }
 
//=========================
// = BACKGROUND-POSITION CLASS
//=========================

.background-position-center {
	.DEPRECATED(~' Use: .bg-position-center');
	background-position: center center;
}

.bg-position-top-left 		{ background-position: top left; }
.bg-position-top-center 	{ background-position: top center; }
.bg-position-top-right 		{ background-position: top right; }
.bg-position-center-left 	{ background-position: center left; }
.bg-position-center 		{ background-position: center; }
.bg-position-center-right 	{ background-position: center right; }
.bg-position-bottom-left 	{ background-position: bottom left; }
.bg-position-bottom-center 	{ background-position: bottom center; }
.bg-position-bottom-right 	{ background-position: bottom right; }
 
//=========================
// = BACKGROUND-REPEAT CLASS
//=========================

.background-repeat-no-repeat, .background-no-repeat {
	.DEPRECATED(~' USE: .bg-no-repeat');
	background-repeat: no-repeat;
}

.bg-no-repeat 	{ background-repeat: no-repeat; }
.bg-repeat 		{ background-repeat: repeat; }
.bg-repeat-x 	{ background-repeat: repeat-x; }
.bg-repeat-y 	{ background-repeat: repeat-y; }
 
//=========================
// = BACKGROUND-SIZE CLASS
//=========================

.background-size-cover {
	.DEPRECATED(~' USER: .bg-size-cover');
	background-size: cover;
}

.bg-size-cover 		{ background-size: cover; }
.bg-size-contain 	{ background-size: contain; }
 
//=========================
// = BORDER-RADIUS CLASS
//=========================
.border-radius-none {
	border-radius: 0;
}

.border-radius-small, 	.radius-small 	{ border-radius: @border-radius-small;  }
.border-radius-mid, 	.radius-mid 	{ border-radius: @border-radius-mid;    }
.border-radius-large, 	.radius-large 	{ border-radius: @border-radius-large;  }
.border-radius-larger, 	.radius-larger 	{ border-radius: @border-radius-larger; }
.border-radius-full, 	.radius-full 	{ border-radius: 100%; }

.border-radius-left-small, .radius-left-small {
	border-bottom-left-radius: @border-radius-small;
	border-top-left-radius: @border-radius-small;
}

// BORDER-RADIUS RESPONSIVE
// FROM XS
.border-radius-mid-from-xs {
	#mq-min-width(@screen-xs, {
		.border-radius-mid;
	});
}
 
//=========================
// = BORDER-SPACING CLASS
//=========================
.border-spacing-smallest 	{ border-spacing: @spacing-smallest; }
.border-spacing-smaller 	{ border-spacing: @spacing-smaller;  }
.border-spacing-small 		{ border-spacing: @spacing-small;    }
.border-spacing-mid 		{ border-spacing: @spacing-mid;      }
.border-spacing-large 		{ border-spacing: @spacing-large;    }
.border-spacing-larger 		{ border-spacing: @spacing-larger;   }
.border-spacing-largest 	{ border-spacing: @spacing-largest;  }
 
//=========================
// = BORDER STYLE CLASS
//=========================

.border-solid, 	.border-style-solid 	{ border-style: solid;  }
.border-dotted, .border-style-dotted 	{ border-style: dotted; }
.border-dashed, .border-style-dashed 	{ border-style: dashed; }
 
//=========================
// = BORDER WIDTH
//=========================

.border-none 		{ border: none; }
.border-0 			{ border-width: 0; }

.border-slimest 	{ border-width: @border-slimest;  }
.border-slimer 		{ border-width: @border-slimer;   }
.border-slim 		{ border-width: @border-slim;     }
.border-average 	{ border-width: @border-average;  }
.border-thick 		{ border-width: @border-thick;    }
.border-thicker 	{ border-width: @border-thicker;  }
.border-thickest 	{ border-width: @border-thickest; }
 
//=========================
// = BOX-SIZING CLASS
//=========================

.box-sizing-border-box, 	.border-box 	{ #box-sizing(); }
.box-sizing-content-box, 	.content-box 	{ #box-sizing(content-box); }

//TO XS
.border-box-to-xs {
	#mq-max-width((@screen-xs - 1), {
		.box-sizing-border-box;
	});
}
 
//=========================
// = CLEAR CLASS
//=========================

.clear-none 			{ clear: none;  }
.clear-both, .clear 	{ clear: both;  }
.clear-left 			{ clear: left;  }
.clear-right 			{ clear: right; }

//=========================
// = BACKGROUND-COLOR CLASS
//=========================
.border-color-white-half-transparent, .border-color-white-translucent {
	.DEPRECATED(~' Dont mix opacity and color in one property, use composition instead');
	border-color: fade(@white, 50%);
}

.border-color-light-half-transparent, .border-color-light-translucent {
	.DEPRECATED(~' Dont mix opacity and color in one property, use composition instead');
	border-color: fade(@light, 50%);
}

.border-color-dark-half-transparent, .border-color-dark-translucent {
	.DEPRECATED(~' Dont mix opacity and color in one property, use composition instead');
	border-color: fade(@dark, 50%);
}

#generate-base-color-class(@suffix: ~'') {
	#generate-color-class(@suffix, ~'transparent', 		~'transparent');
	#generate-color-class(@suffix, ~'current-color', 	~'currentColor');

	#generate-color-class(@suffix, ~'true-white', 		@true-white);
	#generate-color-class(@suffix, ~'true-black', 		@true-black);

	#generate-color-class(@suffix, ~'white', 		@white);
	#generate-color-class(@suffix, ~'black', 		@black);

	#generate-color-class(@suffix, ~'dark', 			@dark);
	#generate-color-class(@suffix, ~'light', 			@light);
}

// ON HOVER
// WHITE
.color-white-on-hover{
	#hover-only({
		color: @white;
	});
}

// BLACK
.color-black-on-hover{
	#hover-only({
		color: @black;
	});
}

// ON HOVER AND IS SELECTED
// WHITE
.color-white-on-hover-and-is-selected {
	
	#hover-only({
		color: @white;
	});
	
	&.is-selected {
		color: @white;
	}
}

// BLACK
.color-black-on-hover-and-is-selected {
	
	#hover-only({
		color: @black;
	});
	
	&.is-selected {
		color: @black;
	}
}

//=========================
// = CURSOR CLASS
//=========================

.cursor-pointer 	{ cursor: pointer; }
.cursor-hand 		{ cursor: pointer; }
.cursor-drag 		{ cursor: move;    }
.cursor-normal 		{ cursor: auto;    }
.cursor-loading 	{ cursor: wait;    }
.cursor-text 		{ cursor: text;    }

//=========================
// = DIRECTION CLASS
//=========================

.direction-rtl { direction: rtl; }
.direction-ltr { direction: ltr; }

//=========================
// = DISPLAY CLASS
//=========================

#generate-display-classes (@suffix: ~'') {
	
	.hidden@{suffix} 		{ display: none;         }
	.table@{suffix} 		{ display: table;        }
	.table-cell@{suffix} 	{ display: table-cell;   }
	.list-item@{suffix} 	{ display: list-item;    }
	.inline@{suffix} 		{ display: inline;       }
	.inline-block@{suffix} 	{ display: inline-block; }
	.block@{suffix} 		{ display: block;        }

	.flexbox@{suffix} {
		display: -ms-flexbox;
		display: -webkit-flex;
		display: flex;
		
		> * {
			#flex-basis(auto);
			min-height: 0;
			min-width: 0;
		}
	}

	.flexbox-inline@{suffix} {
		display: -ms-inline-flexbox;
		display: -webkit-inline-flex;
		display: inline-flex;
		
		> * {
			#flex-basis(auto);
			min-height: 0;
			min-width: 0;
		}
	}
}

.hidden-when-selected {
	&.is-selected {
		display: none;
	}
}

//=========================
// = FILTER CLASS
//=========================

.filter-grayscale, .grayscale { #add-grayscale(); }

//=========================
// = FIRST LETTER CLASS
//=========================

.first-letter-upper::first-letter { .text-transform-upper; }

// ================================
// FLEXBOX CLASS
// ================================

//flex-center
.flex-center {
	#flex-justify-content(center);
	#flex-align-items(center);
}

//flex-flow
.flex-flow-row-wrap {
	#flex-direction(row);
	#flex-wrap(wrap);
}

.flex-flow-row-nowrap {
	#flex-direction(row);
	#flex-wrap(nowrap);
}

.flex-flow-column-wrap {
	#flex-direction(column);
	#flex-wrap(wrap);
}

.flex-flow-column-nowrap {
	#flex-direction(column);
	#flex-wrap(nowrap);
}


// ================================
// FLEX-ALIGN-ITEMS
// ================================
.flex-stretch 				{ #flex-align-items(stretch);    }
.flex-align-items-start 	{ #flex-align-items(flex-start); }
.flex-align-items-center 	{ #flex-align-items(center);     }
.flex-align-items-end 		{ #flex-align-items(flex-end);   }
.flex-align-items-baseline 	{ #flex-align-items(baseline);   }

// ================================
// FLEX-JUSTIFY-CONTENT
// ================================
.flex-justify-start 			{ #flex-justify-content(flex-start);    }
.flex-justify-center 			{ #flex-justify-content(center);        }
.flex-justify-end 				{ #flex-justify-content(flex-end);      }
.flex-justify-space-between 	{ #flex-justify-content(space-between); }
.flex-justify-space-around 		{ #flex-justify-content(space-around);  }

// ================================
// FLEX-GROW
// ================================
.flex-grow-0 	{ #flex-grow(0); }
.flex-grow-1 	{ #flex-grow(1); }
.flex-grow-2 	{ #flex-grow(2); }
.flex-grow-3 	{ #flex-grow(3); }
.flex-grow-4 	{ #flex-grow(4); }

// FROM PH
.flex-grow-1-from-ph {
	#mq-min-width(@screen-ph, {
		#flex-grow(1);
	});
}

// FROM MD
.flex-grow-0-from-md {
	#mq-min-width((@screen-md), {
		#flex-grow(0);
	});
}

.flex-grow-1-from-md {
	#mq-min-width((@screen-md), {
		#flex-grow(1);
	});
}

// TO MD
.flex-grow-1-to-md {
	#mq-max-width((@screen-md - 1), {
		#flex-grow(1);
	});
}

// TO PH
.flex-grow-2-to-ph {
	#mq-max-width(@screen-ph - 1, {
		#flex-grow(2);
	});
}

// ================================
// FLEX-SHRINK
// ================================
.flex-shrink-0 	{ #flex-shrink(0); }
.flex-shrink-1 	{ #flex-shrink(1); }

// ================================
// FLEX-SHRINK
// ================================
.flex-basis-auto 	{ #flex-basis(auto); }
.flex-basis-0 		{ #flex-basis(0);    }

.flex-basis-large 	{ #flex-basis(@spacing-large) }

// FROM MD
.flex-basis-0-from-md {
	#mq-min-width((@screen-md), {
		#flex-basis(0);
	});
}

// TO MD
.flex-basis-auto-to-md {
	#mq-max-width((@screen-md - 1), {
		#flex-basis(auto);
	});
}

// TO XS
.flex-basis-initial-to-xs {
	#mq-max-width(@screen-xs - 1, {
		#flex-basis(initial);
	});
}

// TO PH
.flex-basis-initial-to-ph {
	#mq-max-width(@screen-ph - 1, {
		#flex-basis(initial);
	});
}

// ================================
// FLEX-ORDER
// ================================
.flex-order-1 { #flex-order(1); }
.flex-order-2 { #flex-order(2); }
.flex-order-3 { #flex-order(3); }

// FROM PH
.flex-order-2-from-ph {
	#mq-min-width(@screen-ph, {
		#flex-order(2);
	});
}

// FROM XS
.flex-order-2-from-xs {
	#mq-min-width(@screen-xs, {
		#flex-order(2);
	});
}

// FROM SM
.flex-order-2-from-sm {
	#mq-min-width(@screen-sm, {
		#flex-order(2);
	});
}

// FROM XL
.flex-order-2-from-xl {
	#mq-min-width(@screen-xl, {
		#flex-order(2);
	});
}

// TO MD
.flex-order-1-to-md {
	#mq-max-width((@screen-md - 1), {
		#flex-order(1);
	});
}

.flex-order-2-to-md {
	#mq-max-width((@screen-md - 1), {
		#flex-order(2);
	});
}

// TO SM
.flex-order-1-to-sm {
	#mq-max-width((@screen-sm - 1), {
		#flex-order(1);
	});
}

.flex-order-2-to-sm {
	#mq-max-width((@screen-sm - 1), {
		#flex-order(2);
	});
}

// TO XS
.flex-order-to-xs-2 {
	.DEPRECATED(~'');
	#mq-max-width(@screen-xs - 1, {
		#flex-order(2);
	});
}

.flex-order-1-to-xs {
	#mq-max-width((@screen-xs - 1), {
		#flex-order(1);
	});
}

.flex-order-2-to-xs {
	.DEPRECATED(~'');
	#mq-max-width(@screen-xs - 1, {
		#flex-order(2);
	});
}

// TO PH
.flex-order-to-ph-2 {
	.DEPRECATED(~'');
	#mq-max-width(@screen-ph - 1, {
		#flex-order(2);
	});
}

.flex-order-2-to-ph {
	#mq-max-width(@screen-ph - 1, {
		#flex-order(2);
	});
}

// ================================
// FLEX-DIRECTION
// ================================
.flex-row 		{ #flex-direction(row);    }
.flex-column 	{ #flex-direction(column); }

// TO MD
.flex-column-to-md {
	#mq-max-width((@screen-md - 1), {
		#flex-direction(column);
	});
}

// TO SM
.flex-column-to-sm {
	#mq-max-width((@screen-sm - 1), {
		#flex-direction(column);
	});
}

// TO XS
.flex-column-to-xs {
	#mq-max-width((@screen-xs - 1), {
		#flex-direction(column);
	});
}

// ================================
// FLEX-WRAP
// ================================
.flex-wrap 		{ #flex-wrap(wrap);   }
.flex-nowrap 	{ #flex-wrap(nowrap); }

/*
.flex-flow-column-to-desktop-row-wrap {
	.flex-flow-column-wrap;
	
	#mq-min-width(@screen-xs, {
		.flex-flow-row-wrap;
	});
}

.flex-flow-column-to-desktop-row-nowrap {
	.flex-flow-column-nowrap;
	
	#mq-min-width(@screen-xs, {
		.flex-flow-row-nowrap;
	});
}*/

//=========================
// = FLOAT CLASS
//=========================

.float-none 	{ float: none;  }
.float-left 	{ float: left;  }
.float-right 	{ float: right; }

//=========================
// = FONT-FAMILY CLASS
//=========================

.font-family-base, 		.font-base 		{ font-family: @font-base;   }
.font-family-alt, 		.font-alt 		{ font-family: @font-alt;    }
.font-family-accent, 	.font-accent 	{ font-family: @font-accent; }

/*
// PLANNED
.font-family-alt2, .font-alt2 {
	font-family: @font-alt2;
}
*/

/*
// PLANNED
.font-family-accent2, .font-accent2 {
	font-family: @font-accent;
}
*/

//=========================
// = FONT-FEATURE-SETTINGS CLASS
//=========================

.font-feature-settings-onum, .oldstyle-nums {
	font-variant-numeric: oldstyle-nums;
	-moz-font-feature-settings: "onum";
	-webkit-font-feature-settings: "onum";
	font-feature-settings: "onum";
}

//=========================
// = FONT STYLE CLASS
//=========================
// DEPRECATED
.text-normal {
	.DEPRECATED(~'Use font-style-normal');
	font-style: normal;
}

.text-italic,  {
	.DEPRECATED(~'Use font-style-italic or italic');
	font-style: italic;
}

.font-style-oblique, .text-oblique, oblique {
	.DEPRECATED(~'Use font-style-oblique or oblique');
	font-style: normal;
}

// GOOD CLASSES
.font-style-normal 					{ font-style: normal;  }
.font-style-italic, 	.italic 	{ font-style: italic;  }
.font-style-oblique, 	.oblique 	{ font-style: oblique; }

// ================================
// = FONT WEIGHT CLASS
// ================================
// DEPRECATED
.text-light {
	.DEPRECATED(~'Use font-weight-light or light');
	font-weight: 300;
}

.font-weight-regular, .text-regular {
	.DEPRECATED(~'Use font-weight-normal');
	font-weight: 400;
}

.text-medium {
	.DEPRECATED(~'Use font-weight-medium');
	font-weight: 500;
}

.text-semibold, .text-semi-bold {
	.DEPRECATED(~'Use font-weight-semi-bold or semi-bold');
	font-weight: 600;
}

.text-bold {
	.DEPRECATED(~'Use font-weight-black or bold');
	font-weight: 700;
}

.text-black, .font-weight-black {
	.DEPRECATED(~'Use font-weight-bolder or bolder');
	font-weight: 900;
}

// GOOD CLASSES
.font-weight-light, 	.light 		{ font-weight: 300; }
.font-weight-normal 				{ font-weight: 400; }
.font-weight-medium 				{ font-weight: 500; }
.font-weight-semi-bold, .semi-bold 	{ font-weight: 600; }
.font-weight-bold, 		.bold 		{ font-weight: 700; }
.font-weight-bolder, 	.bolder 	{ font-weight: 900; }

//=========================
// = HEIGHT CLASS
//=========================
// DEPRECATED
.height-quarter 				{ height: 25%; .DEPRECATED(~''); }
.half-height 					{ height: 50%; .DEPRECATED(~''); }
.full-height 					{ height: 100%; .DEPRECATED(~''); }
.height-three-quarter-viewport 	{ height: 75vh; .DEPRECATED(~''); }
.full-viewport-height 			{ height: 100vh; .DEPRECATED(~''); }

// USEFULL
.height-auto 		{ height: auto; }
.height-0 			{ height: 0;    }
.height-1em, .height-em-full, .height-perfect {
	height: 1em;
}

// Spacing
.height-micro 		{ heigth: @spacing-micro;    }
.height-smallest 	{ height: @spacing-smallest; }
.height-smaller 	{ height: @spacing-smaller;  }
.height-small 		{ height: @spacing-small;    }
.height-mid 		{ height: @spacing-mid;      }
.height-large 		{ height: @spacing-large;    }
.height-larger 		{ height: @spacing-larger;   }
.height-largest 	{ height: @spacing-largest;  }
.height-xlarge 		{ height: @spacing-xlarge;   }
.height-huge 		{ height: @spacing-huge;     }

// Line height
.height-loose 		{ height: @line-height-loose;    }
.height-tight 		{ height: @line-height-tight;    }
.height-tightest 	{ height: @line-height-tightest; }

// Dimensions
.height-skelettic 	{ height: @dimension-skelettic; }
.height-tiniest 	{ height: @dimension-tiniest;   }
.height-very-tiny 	{ height: @dimension-very-tiny; }
.height-tinier 		{ height: @dimension-tinier;    }
.height-tiny 		{ height: @dimension-tiny;      }
.height-thinnest 	{ height: @dimension-thinnest;  }
.height-very-thin 	{ height: @dimension-very-thin; }
.height-thinner 	{ height: @dimension-thinner;   }
.height-thin 		{ height: @dimension-thin;      }
.height-standard 	{ height: @dimension-standard;  }
.height-wide 		{ height: @dimension-wide;      }
.height-wider 		{ height: @dimension-wider;     }
.height-very-wide 	{ height: @dimension-very-wide; }
.height-widest 		{ height: @dimension-widest;    }
.height-fat 		{ height: @dimension-fat;       }
.height-fatter 		{ height: @dimension-fatter;    }
.height-very-fat 	{ height: @dimension-very-fat;  }
.height-fattest 	{ height: @dimension-fattest;   }
.height-obese 		{ height: @dimension-obese;     }
.height-morbid 		{ height: @dimension-morbid;    }

// Proportional
.height-half 		{ height: 50%; }
.height-1_2  		{ height: 50%; }

.height-1_4 		{ height: 25%; }
.height-3_4 		{ height: 75%; }

.height-full 		{ height: 100%; }

// Proportional ViewPort Value
.height-1_2-viewport 	{ height: 50vh; }

.height-1_4-viewport 	{ height: 25vh; }
.height-3_4-viewport 	{ height: 75vh; }

.height-full-viewport 	{ height: 100vh; }

// HEIGHT RESPONSIVE
// FROM XS
.height-smallest-from-xs {
	#mq-min-width(@screen-xs, {
		.height-smallest();
	});
}

.height-half-from-xs {
	#mq-min-width(@screen-xs, {
		.height-half();
	});
}

// FROM SM
.full-height-from-sm {
	#mq-min-width(@screen-sm, {
		//DEPRECATED
		.full-height;
	});
}

.height-full-viewport-from-sm {
	#mq-min-width(@screen-sm, {
		height: 100vh;
	});
}

// TO PH
.height-mid-to-ph {
	#mq-max-width(@screen-ph - 1, {
		.height-mid();
	});
}

.height-large-to-ph {
	#mq-max-width(@screen-ph - 1, {
		.height-large();
	});
}

//=========================
// = LETTER-SPACING CLASS
//=========================

.letter-spacing, 		.letter-spaced 		{ letter-spacing: .125em; }
.letter-spacing-wide, 	.letter-spaced-wide { letter-spacing: .25em;  }
.letter-spacing-1px 						{ letter-spacing: 1px;    }
.letter-spacing-2px 						{ letter-spacing: 2px;    }

//=========================
// = LINE-HEIGHT CLASS
//=========================
.line-height-initial 		{ line-height: initial;      }
.line-height-0 				{ line-height: 0;            }
.line-height-0-important 	{ line-height: 0 !important; }
.line-height-mid 			{ line-height: @spacing-mid; }
.line-height-double 		{ line-height: 2em;          }


//=========================
// = LIST-STYLE-TYPE CLASS
//=========================

.list-style-type-none { list-style-type: none; }
//=====================================
//= MARGIN CLASS
//=====================================

#generate-margin-classes (@direction: ~'', @suffix: ~'') {
	
	//-------------------------------------------
	// USEFULL MARGIN 
	//-------------------------------------------
	#generate-margin-classes-value(@direction, @suffix, ~'0', 0);
	#generate-margin-classes-value(@direction, @suffix, ~'none', 0);
	
	#generate-margin-classes-value(@direction, @suffix, ~'auto', auto);
	
	//-------------------------------------------
	// SPACING MARGIN 
	//-------------------------------------------
	#generate-margin-classes-value(@direction, @suffix, ~'atto', 			@spacing-atto);
	#generate-margin-classes-value(@direction, @suffix, ~'femto', 			@spacing-femto);
	#generate-margin-classes-value(@direction, @suffix, ~'pico', 			@spacing-pico);

	//#generate-margin-classes-value(@direction, @suffix, ~'half-nano', 	@spacing-nano * 0.5);

	#generate-margin-classes-value(@direction, @suffix, ~'nano', 			@spacing-nano);
	#generate-margin-classes-value(@direction, @suffix, ~'micro', 			@spacing-micro);
	#generate-margin-classes-value(@direction, @suffix, ~'xsmall', 			@spacing-xsmall);
	#generate-margin-classes-value(@direction, @suffix, ~'smallest', 		@spacing-smallest);

	//#generate-margin-classes-value(@direction, @suffix, ~'half-smaller', 	@spacing-smaller * 0.5);

	#generate-margin-classes-value(@direction, @suffix, ~'smaller', 		@spacing-smaller);
	#generate-margin-classes-value(@direction, @suffix, ~'small', 			@spacing-small);
	#generate-margin-classes-value(@direction, @suffix, ~'mid', 			@spacing-mid);

	//#generate-margin-classes-value(@direction, @suffix, ~'half-large', 	@spacing-large * 0.5);

	#generate-margin-classes-value(@direction, @suffix, ~'large', 			@spacing-large);
	#generate-margin-classes-value(@direction, @suffix, ~'larger', 			@spacing-larger);
	#generate-margin-classes-value(@direction, @suffix, ~'largest', 		@spacing-largest);
	#generate-margin-classes-value(@direction, @suffix, ~'xlarge', 			@spacing-xlarge);
	#generate-margin-classes-value(@direction, @suffix, ~'huge', 			@spacing-huge);
	#generate-margin-classes-value(@direction, @suffix, ~'mega', 			@spacing-mega);
	#generate-margin-classes-value(@direction, @suffix, ~'giga', 			@spacing-giga);
	#generate-margin-classes-value(@direction, @suffix, ~'tera', 			@spacing-tera);
	#generate-margin-classes-value(@direction, @suffix, ~'peta', 			@spacing-peta);
	#generate-margin-classes-value(@direction, @suffix, ~'zetta', 			@spacing-zetta);
	#generate-margin-classes-value(@direction, @suffix, ~'yotta', 			@spacing-yotta);
	
	//-------------------------------------------
	// RATIONNAL MARGIN
	//-------------------------------------------
	#generate-margin-classes-value(@direction, @suffix, ~'1_2', 50%);
	#generate-margin-classes-value(@direction, @suffix, ~'1_3', 100% / 3);
	#generate-margin-classes-value(@direction, @suffix, ~'2_3', 100% / 3 * 2);
	
	#generate-margin-classes-value(@direction, @suffix, ~'1_4', 100% / 4);
	#generate-margin-classes-value(@direction, @suffix, ~'3_4', 100% / 4 * 3);
	
	#generate-margin-classes-value(@direction, @suffix, ~'1_5', 100% / 5);
	#generate-margin-classes-value(@direction, @suffix, ~'2_5', 100% / 5 * 2);
	#generate-margin-classes-value(@direction, @suffix, ~'3_5', 100% / 5 * 3);
	#generate-margin-classes-value(@direction, @suffix, ~'4_5', 100% / 5 * 4);
	
	#generate-margin-classes-value(@direction, @suffix, ~'1_6', 100% / 6);
	#generate-margin-classes-value(@direction, @suffix, ~'5_6', 100% / 6 * 5);
	
	#generate-margin-classes-value(@direction, @suffix, ~'1_7', 100% / 7);
	#generate-margin-classes-value(@direction, @suffix, ~'2_7', 100% / 7 * 2);
	#generate-margin-classes-value(@direction, @suffix, ~'3_7', 100% / 7 * 3);
	#generate-margin-classes-value(@direction, @suffix, ~'4_7', 100% / 7 * 4);
	#generate-margin-classes-value(@direction, @suffix, ~'5_7', 100% / 7 * 5);
	#generate-margin-classes-value(@direction, @suffix, ~'6_7', 100% / 7 * 6);
	
	#generate-margin-classes-value(@direction, @suffix, ~'1_8', 100% / 8);
	#generate-margin-classes-value(@direction, @suffix, ~'3_8', 100% / 8 * 3);
	#generate-margin-classes-value(@direction, @suffix, ~'5_8', 100% / 8 * 5);
	#generate-margin-classes-value(@direction, @suffix, ~'7_8', 100% / 8 * 7);
	
	#generate-margin-classes-value(@direction, @suffix, ~'1_9', 100% / 9);
	#generate-margin-classes-value(@direction, @suffix, ~'2_9', 100% / 9 * 2);
	#generate-margin-classes-value(@direction, @suffix, ~'4_9', 100% / 9 * 4);
	#generate-margin-classes-value(@direction, @suffix, ~'5_9', 100% / 9 * 5);
	#generate-margin-classes-value(@direction, @suffix, ~'7_9', 100% / 9 * 7);
	#generate-margin-classes-value(@direction, @suffix, ~'8_9', 100% / 9 * 8);
	
	#generate-margin-classes-value(@direction, @suffix, ~'1_10', 100% / 10);
	#generate-margin-classes-value(@direction, @suffix, ~'3_10', 100% / 10 * 3);
	#generate-margin-classes-value(@direction, @suffix, ~'7_10', 100% / 10 * 7);
	#generate-margin-classes-value(@direction, @suffix, ~'9_10', 100% / 10 * 9);
	
	//-------------------------------------------
	// RATIONNAL VIEWPORT MARGIN
	//-------------------------------------------
	#generate-margin-classes-value(@direction, @suffix, ~'1_2-viewport', 50vh);
	#generate-margin-classes-value(@direction, @suffix, ~'1_3-viewport', 100vh / 3);
	#generate-margin-classes-value(@direction, @suffix, ~'2_3-viewport', 100vh / 3 * 2);
	
	#generate-margin-classes-value(@direction, @suffix, ~'1_4-viewport', 100vh / 4);
	#generate-margin-classes-value(@direction, @suffix, ~'3_4-viewport', 100vh / 4 * 3);
	
	//-------------------------------------------
	// MINUS SPACING MARGIN
	//-------------------------------------------
	#generate-margin-classes-value(@direction, @suffix, ~'minus-atto', 			-@spacing-atto);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-femto', 		-@spacing-femto);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-pico', 			-@spacing-pico);

	//#generate-margin-classes-value(@direction, @suffix, ~'minus-half-nano', 	-@spacing-nano * 0.5);

	#generate-margin-classes-value(@direction, @suffix, ~'minus-nano', 			-@spacing-nano);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-micro', 		-@spacing-micro);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-xsmall', 		-@spacing-xsmall);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-smallest', 		-@spacing-smallest);

	//#generate-margin-classes-value(@direction, @suffix, ~'minus-half-smaller', 	-@spacing-smaller * 0.5);

	#generate-margin-classes-value(@direction, @suffix, ~'minus-smaller', 		-@spacing-smaller);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-small', 		-@spacing-small);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-mid', 			-@spacing-mid);

	//#generate-margin-classes-value(@direction, @suffix, ~'minus-half-large', 	-@spacing-large * 0.5);

	#generate-margin-classes-value(@direction, @suffix, ~'minus-large', 		-@spacing-large);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-larger', 		-@spacing-larger);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-largest', 		-@spacing-largest);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-xlarge', 		-@spacing-xlarge);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-huge', 			-@spacing-huge);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-mega', 			-@spacing-mega);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-giga', 			-@spacing-giga);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-tera', 			-@spacing-tera);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-peta', 			-@spacing-peta);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-zetta', 		-@spacing-zetta);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-yotta', 		-@spacing-yotta);
	
	//-------------------------------------------
	// MINUS RATIONNAL MARGIN
	//-------------------------------------------
	#generate-margin-classes-value(@direction, @suffix, ~'minus-1_2', -50%);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-1_3', -100% / 3);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-2_3', -100% / 3 * 2);
	
	#generate-margin-classes-value(@direction, @suffix, ~'minus-1_4', -100% / 4);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-3_4', -100% / 4 * 3);
	
	#generate-margin-classes-value(@direction, @suffix, ~'minus-1_5', -100% / 5);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-2_5', -100% / 5 * 2);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-3_5', -100% / 5 * 3);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-4_5', -100% / 5 * 4);
	
	#generate-margin-classes-value(@direction, @suffix, ~'minus-1_6', -100% / 6);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-5_6', -100% / 6 * 5);
	
	#generate-margin-classes-value(@direction, @suffix, ~'minus-1_7', -100% / 7);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-2_7', -100% / 7 * 2);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-3_7', -100% / 7 * 3);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-4_7', -100% / 7 * 4);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-5_7', -100% / 7 * 5);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-6_7', -100% / 7 * 6);
	
	#generate-margin-classes-value(@direction, @suffix, ~'minus-1_8', -100% / 8);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-3_8', -100% / 8 * 3);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-5_8', -100% / 8 * 5);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-7_8', -100% / 8 * 7);
	
	#generate-margin-classes-value(@direction, @suffix, ~'minus-1_9', -100% / 9);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-2_9', -100% / 9 * 2);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-4_9', -100% / 9 * 4);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-5_9', -100% / 9 * 5);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-7_9', -100% / 9 * 7);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-8_9', -100% / 9 * 8);
	
	#generate-margin-classes-value(@direction, @suffix, ~'minus-1_10', -100% / 10);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-3_10', -100% / 10 * 3);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-7_10', -100% / 10 * 7);
	#generate-margin-classes-value(@direction, @suffix, ~'minus-9_10', -100% / 10 * 9);
}

#generate-margin-two-axes-classes(@direction, @axe1, @axe2, @suffix: ~'') {
	
	//-------------------------------------------
	// USEFULL MARGIN 
	//-------------------------------------------
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'0', 0);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'none', 0);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'auto', auto);

	//-------------------------------------------
	// SPACING MARGIN 
	//-------------------------------------------
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'atto', 			@spacing-atto);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'femto', 			@spacing-femto);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'pico', 			@spacing-pico);

	//#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'half-nano', 		@spacing-nano * 0.5);

	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'nano', 			@spacing-nano);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'micro', 			@spacing-micro);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'xsmall', 		@spacing-xsmall);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'smallest', 		@spacing-smallest);

	//#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'half-smaller', 	@spacing-smaller * 0.5);

	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'smaller', 		@spacing-smaller);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'small', 			@spacing-small);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'mid', 			@spacing-mid);

	//#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'half-large', 	@spacing-large * 0.5);

	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'large', 			@spacing-large);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'larger', 		@spacing-larger);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'largest', 		@spacing-largest);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'xlarge', 		@spacing-xlarge);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'huge', 			@spacing-huge);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'mega', 			@spacing-mega);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'giga', 			@spacing-giga);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'tera', 			@spacing-tera);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'peta', 			@spacing-peta);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'zetta', 			@spacing-zetta);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'yotta', 			@spacing-yotta);
	
	//-------------------------------------------
	// RATIONNAL MARGIN
	//-------------------------------------------
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_2', 50%);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_3', 100% / 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'2_3', 100% / 3 * 2);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_4', 100% / 4);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_4', 100% / 4 * 3);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_5', 100% / 5);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'2_5', 100% / 5 * 2);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_5', 100% / 5 * 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'4_5', 100% / 5 * 4);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_6', 100% / 6);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'5_6', 100% / 6 * 5);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_7', 100% / 7);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'2_7', 100% / 7 * 2);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_7', 100% / 7 * 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'4_7', 100% / 7 * 4);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'5_7', 100% / 7 * 5);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'6_7', 100% / 7 * 6);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_8', 100% / 8);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_8', 100% / 8 * 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'5_8', 100% / 8 * 5);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'7_8', 100% / 8 * 7);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_9', 100% / 9);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'2_9', 100% / 9 * 2);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'4_9', 100% / 9 * 4);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'5_9', 100% / 9 * 5);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'7_9', 100% / 9 * 7);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'8_9', 100% / 9 * 8);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_10', 100% / 10);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_10', 100% / 10 * 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'7_10', 100% / 10 * 7);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'9_10', 100% / 10 * 9);
	
	//-------------------------------------------
	// MINUS SPACING MARGIN
	//-------------------------------------------
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-atto', 		-@spacing-atto);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-femto', 		-@spacing-femto);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-pico', 		-@spacing-pico);

	//#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-half-nano', 	-@spacing-nano * 0.5);

	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-nano', 		-@spacing-nano);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-micro', 		-@spacing-micro);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-xsmall', 		-@spacing-xsmall);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-smallest', 	-@spacing-smallest);

	//#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-half-smaller', -@spacing-smaller * 0.5);

	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-smaller', 		-@spacing-smaller);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-small', 		-@spacing-small);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-mid', 			-@spacing-mid);

	//#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-half-large', 	-@spacing-large * 0.5);

	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-large', 		-@spacing-large);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-larger', 		-@spacing-larger);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-largest', 		-@spacing-largest);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-xlarge', 		-@spacing-xlarge);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-huge', 		-@spacing-huge);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-mega', 		-@spacing-mega);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-giga', 		-@spacing-giga);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-tera', 		-@spacing-tera);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-peta', 		-@spacing-peta);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-zetta', 		-@spacing-zetta);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-yotta', 		-@spacing-yotta);
	
	//-------------------------------------------
	// MINUS RATIONNAL MARGIN
	//-------------------------------------------
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-1_2', -50%);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-1_3', -100% / 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-2_3', -100% / 3 * 2);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-1_4', -100% / 4);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-3_4', -100% / 4 * 3);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-1_5', -100% / 5);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-2_5', -100% / 5 * 2);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-3_5', -100% / 5 * 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-4_5', -100% / 5 * 4);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-1_6', -100% / 6);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-5_6', -100% / 6 * 5);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-1_7', -100% / 7);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-2_7', -100% / 7 * 2);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-3_7', -100% / 7 * 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-4_7', -100% / 7 * 4);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-5_7', -100% / 7 * 5);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-6_7', -100% / 7 * 6);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-1_8', -100% / 8);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-3_8', -100% / 8 * 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-5_8', -100% / 8 * 5);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-7_8', -100% / 8 * 7);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-1_9', -100% / 9);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-2_9', -100% / 9 * 2);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-4_9', -100% / 9 * 4);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-5_9', -100% / 9 * 5);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-7_9', -100% / 9 * 7);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-8_9', -100% / 9 * 8);
	
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-1_10', -100% / 10);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-3_10', -100% / 10 * 3);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-7_10', -100% / 10 * 7);
	#generate-margin-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'minus-9_10', -100% / 10 * 9);
}

//=========================
// = MAX-HEIGHT CLASS
//=========================
// DEPRECATED
.max-height-half 					{ max-height:  50%; .DEPRECATED(~''); }
.max-height-quarter 				{ max-height:  25%; .DEPRECATED(~''); }
.max-height-three-quarter 			{ max-height:  75%; .DEPRECATED(~''); }
.max-height-quarter-viewport 		{ max-height:  25vh; .DEPRECATED(~'');}
.max-height-half-viewport 			{ max-height:  50vh; .DEPRECATED(~'');}
.max-height-three-quarter-viewport 	{ max-height:  75vh; .DEPRECATED(~'');}

// USEFULL
.max-height-auto 			{ max-height: auto; }
.max-height-0 				{ max-height: 0; }

//Spacing Value
.max-height-micro 			{ max-height: @spacing-micro;        }
.max-height-micro-double 	{ max-height: @spacing-micro * 2;    }
.max-height-micro-triple 	{ max-height: @spacing-micro * 3;    }
.max-height-smallest 		{ max-height: @spacing-smallest ;    }
.max-height-smallest-double { max-height: @spacing-smallest * 2; }
.max-height-smallest-triple { max-height: @spacing-smallest * 3; }
.max-height-smaller 		{ max-height: @spacing-smaller;      }
.max-height-smaller-double 	{ max-height: @spacing-smaller * 2;  }
.max-height-smaller-triple 	{ max-height: @spacing-smaller * 3;  }
.max-height-small 			{ max-height: @spacing-small;        }
.max-height-small-double 	{ max-height: @spacing-small * 2;    }
.max-height-small-triple 	{ max-height: @spacing-small * 3;    }
.max-height-mid 			{ max-height: @spacing-mid;          }
.max-height-mid-double 		{ max-height: @spacing-mid * 2;      }
.max-height-mid-triple 		{ max-height: @spacing-mid * 3;      }
.max-height-large 			{ max-height: @spacing-large;        }
.max-height-large-double 	{ max-height: @spacing-large * 2;    }
.max-height-large-triple 	{ max-height: @spacing-large * 3;    }
.max-height-larger 			{ max-height: @spacing-larger;       }
.max-height-larger-double 	{ max-height: @spacing-larger * 2;   }
.max-height-larger-triple 	{ max-height: @spacing-larger * 3;   }
.max-height-largest 		{ max-height: @spacing-largest;      }
.max-height-largest-double 	{ max-height: @spacing-largest * 2;  }
.max-height-largest-triple 	{ max-height: @spacing-largest * 3;  }
.max-height-huge 			{ max-height: @spacing-huge;         }
.max-height-huge-double 	{ max-height: @spacing-huge * 2;     }
.max-height-huge-triple 	{ max-height: @spacing-huge * 3;     }
.max-height-mega 			{ max-height: @spacing-mega;         }

.max-height-skelettic 		{ max-height: @dimension-skelettic; }
.max-height-tiniest 		{ max-height: @dimension-tiniest;   }
.max-height-very-tiny 		{ max-height: @dimension-very-tiny; }
.max-height-tinier 			{ max-height: @dimension-tinier;    }
.max-height-tiny 			{ max-height: @dimension-tiny;      }
.max-height-thinnest 		{ max-height: @dimension-thinnest;  }
.max-height-very-thin 		{ max-height: @dimension-very-thin; }
.max-height-thinner 		{ max-height: @dimension-thinner;   }
.max-height-thin 			{ max-height: @dimension-thin;      }
.max-height-standard 		{ max-height: @dimension-standard;  }
.max-height-wide 			{ max-height: @dimension-wide;      }
.max-height-wider 			{ max-height: @dimension-wider;     }
.max-height-very-wide 		{ max-height: @dimension-very-wide; }
.max-height-widest 			{ max-height: @dimension-widest;    }
.max-height-fat 			{ max-height: @dimension-fat;       }
.max-height-fatter 			{ max-height: @dimension-fatter;    }
.max-height-very-fat 		{ max-height: @dimension-very-fat;  }
.max-height-fattest 		{ max-height: @dimension-fattest;   }
.max-height-obese 			{ max-height: @dimension-obese;     }
.max-height-morbid 			{ max-height: @dimension-morbid;    }

// Proportional Value
.max-height-1_2 			{ max-height:  50%; }

.max-height-1_4 			{ max-height:  25%; }
.max-height-3_4 			{ max-height:  75%; }

.max-height-full 			{ max-height: 100%; }

// Proportional ViewPort Value
.max-height-full-viewport 	{ max-height: 100vh; }

//=========================
// = MAX-WIDTH CLASS
//=========================
.max-width-micro-double {
	max-width: @spacing-micro * 2;
}

.max-width-micro-triple {
	max-width: @spacing-micro * 3;
}

.max-width-smallest-double {
	max-width: @spacing-smallest  * 2;
}

.max-width-smallest-triple {
	max-width: @spacing-smallest  * 3;
}

.max-width-smaller-double {
	max-width: @spacing-smaller * 2;
}

.max-width-smaller-triple {
	max-width: @spacing-smaller * 3;
}

.max-width-small-double {
	max-width: @spacing-small * 2;
}

.max-width-small-triple {
	max-width: @spacing-small * 3;
}

.max-width-mid-double {
	max-width: @spacing-mid * 2;
}

.max-width-mid-triple {
	max-width: @spacing-mid * 3;
}

.max-width-large-double {
	max-width: @spacing-large * 2;
}

.max-width-large-triple {
	max-width: @spacing-large * 3;
}

.max-width-larger-double {
	max-width: @spacing-larger * 2;
}

.max-width-larger-triple {
	max-width: @spacing-larger * 3;
}

.max-width-largest-double {
	max-width: @spacing-largest * 2;
}

.max-width-largest-triple {
	max-width: @spacing-largest * 3;
}

.max-width-huge-double {
	max-width: @spacing-huge * 2;
}

.max-width-huge-triple {
	max-width: @spacing-huge * 3;
}

// PROPORTIONAL VALUE
.max-width-quarter {
	.DEPRECATED(~'');
	max-width: 25%;
}

.max-width-half {
	.DEPRECATED(~'');
	max-width: 50%;
}

.max-width-three-quarter {
	.DEPRECATED(~'');
	max-width: 75%;
}

// PROPORTIONAL VIEWPORT VALUE
.max-width-quarter-viewport {
	.DEPRECATED(~'');
	max-width: 25vh;
}

.max-width-half-viewport {
	.DEPRECATED(~'');
	max-width: 50vh;
}

.max-width-three-quarter-viewport {
	.DEPRECATED(~'');
	max-width: 75vw;
}

// MAX-WIDTH RESPONSIVE

// FROM PH TO SM
.max-width-larger-from-ph-to-sm {
	#mq-min-max-width(@screen-ph, @screen-sm - 1, {
		max-width: @spacing-larger;
	});
}

// FROM PH TO XS
.max-width-large-from-ph-to-xs {
	#mq-min-max-width(@screen-ph, @screen-xs - 1, {
		max-width: @spacing-large;
	});
}

//=========================
// = MIN-HEIGHT CLASS
//=========================
// DEPRECATED
.min-height-quarter 				{ min-height: 25%; .DEPRECATED(~''); }
.min-height-half 					{ min-height: 50%; .DEPRECATED(~''); }
.min-height-three-quarter 			{ min-height: 75%; .DEPRECATED(~''); }
.min-height-quarter-viewport 		{ min-height: 25vh; .DEPRECATED(~''); }
.min-height-half-viewport 			{ min-height: 50vh; .DEPRECATED(~''); }
.min-height-three-quarter-viewport 	{ min-height: 75vh; .DEPRECATED(~''); }


// USEFULL
.min-height-auto 			{ min-height: auto; }
.min-height-0 				{ min-height: 0; }

//Spacing Value
.min-height-micro 			{ min-height: @spacing-micro;        }
.min-height-micro-double 	{ min-height: @spacing-micro * 2;    }
.min-height-micro-triple 	{ min-height: @spacing-micro * 3;    }
.min-height-smallest 		{ min-height: @spacing-smallest ;    }
.min-height-smallest-double { min-height: @spacing-smallest * 2; }
.min-height-smallest-triple { min-height: @spacing-smallest * 3; }
.min-height-smaller 		{ min-height: @spacing-smaller;      }
.min-height-smaller-double 	{ min-height: @spacing-smaller * 2;  }
.min-height-smaller-triple 	{ min-height: @spacing-smaller * 3;  }
.min-height-small 			{ min-height: @spacing-small;        }
.min-height-small-double 	{ min-height: @spacing-small * 2;    }
.min-height-small-triple 	{ min-height: @spacing-small * 3;    }
.min-height-mid 			{ min-height: @spacing-mid;          }
.min-height-mid-double 		{ min-height: @spacing-mid * 2;      }
.min-height-mid-triple 		{ min-height: @spacing-mid * 3;      }
.min-height-large 			{ min-height: @spacing-large;        }
.min-height-large-double 	{ min-height: @spacing-large * 2;    }
.min-height-large-triple 	{ min-height: @spacing-large * 3;    }
.min-height-larger 			{ min-height: @spacing-larger;       }
.min-height-larger-double 	{ min-height: @spacing-larger * 2;   }
.min-height-larger-triple 	{ min-height: @spacing-larger * 3;   }
.min-height-largest 		{ min-height: @spacing-largest;      }
.min-height-largest-double 	{ min-height: @spacing-largest * 2;  }
.min-height-largest-triple 	{ min-height: @spacing-largest * 3;  }
.min-height-huge 			{ min-height: @spacing-huge;         }
.min-height-huge-double 	{ min-height: @spacing-huge * 2;     }
.min-height-huge-triple 	{ min-height: @spacing-huge * 3;     }

.min-height-skelettic 		{ min-height: @dimension-skelettic; }
.min-height-tiniest 		{ min-height: @dimension-tiniest;   }
.min-height-very-tiny 		{ min-height: @dimension-very-tiny; }
.min-height-tinier 			{ min-height: @dimension-tinier;    }
.min-height-tiny 			{ min-height: @dimension-tiny;      }
.min-height-thinnest 		{ min-height: @dimension-thinnest;  }
.min-height-very-thin 		{ min-height: @dimension-very-thin; }
.min-height-thinner 		{ min-height: @dimension-thinner;   }
.min-height-thin 			{ min-height: @dimension-thin;      }
.min-height-standard 		{ min-height: @dimension-standard;  }
.min-height-wide 			{ min-height: @dimension-wide;      }
.min-height-wider 			{ min-height: @dimension-wider;     }
.min-height-very-wide 		{ min-height: @dimension-very-wide; }
.min-height-widest 			{ min-height: @dimension-widest;    }
.min-height-fat 			{ min-height: @dimension-fat;       }
.min-height-fatter 			{ min-height: @dimension-fatter;    }
.min-height-very-fat 		{ min-height: @dimension-very-fat;  }
.min-height-fattest 		{ min-height: @dimension-fattest;   }
.min-height-obese 			{ min-height: @dimension-obese;     }
.min-height-morbid 			{ min-height: @dimension-morbid;    }

//Proportional Value
.min-height-1_2 			{ min-height:  50%; }
.min-height-full 			{ min-height: 100%; }

.min-height-1_4 			{ min-height:  25%; }
.min-height-3_4 			{ min-height:  75%; }

//Proportional Viewport value
.min-height-full-viewport 	{ min-height: 100vh; }

//=========================
// = MIN-WIDTH CLASS
//=========================
//DEPRECATED
.min-width-quarter 					{ min-width: 25%; .DEPRECATED(~''); }
.min-width-half, .half-min-width 	{ min-width: 50%; .DEPRECATED(~''); }
.min-width-three-quarter 			{ min-width: 75%; .DEPRECATED(~''); }
.min-width-quarter-viewport 		{ min-width: 25vh; .DEPRECATED(~''); }
.min-width-half-viewport 			{ min-width: 50vh; .DEPRECATED(~''); }

// DOUBLE AND TRIPPLE SPACING VALUE
.min-width-micro-double 	{ min-width: @spacing-micro * 2;     }
.min-width-micro-triple 	{ min-width: @spacing-micro * 3;     }
.min-width-smallest-double 	{ min-width: @spacing-smallest  * 2; }
.min-width-smallest-triple 	{ min-width: @spacing-smallest  * 3; }
.min-width-smaller-double 	{ min-width: @spacing-smaller * 2;   }
.min-width-smaller-triple 	{ min-width: @spacing-smaller * 3;   }
.min-width-small-double 	{ min-width: @spacing-small * 2;     }
.min-width-small-triple 	{ min-width: @spacing-small * 3;     }
.min-width-mid-double 		{ min-width: @spacing-mid * 2;       }
.min-width-mid-triple 		{ min-width: @spacing-mid * 3;       }
.min-width-large-double 	{ min-width: @spacing-large * 2;     }
.min-width-large-triple 	{ min-width: @spacing-large * 3;     }
.min-width-larger-double 	{ min-width: @spacing-larger * 2;    }
.min-width-larger-triple 	{ min-width: @spacing-larger * 3;    }
.min-width-largest-double 	{ min-width: @spacing-largest * 2;   }
.min-width-largest-triple 	{ min-width: @spacing-largest * 3;   }
.min-width-huge-double 		{ min-width: @spacing-huge * 2;      }
.min-width-huge-triple 		{ min-width: @spacing-huge * 3;      }
 
//=========================
// = OPACITY ON HOVER CLASS
//=========================

.opacity-quasi-transparent-on-hover, .quasi-trans-on-hover{
	#hover-only({
		.quasi-trans
	});
}

.opacity-half-on-hover, .opacity-half-transparent-on-hover, .opacity-translucent-on-hover, .translucent-on-hover {
	#hover-only({
		.opacity-half;
	});
}

.opacity-semi-opaque-on-hover, .semi-opaque-on-hover{
	#hover-only({
		.opacity-semi-opaque;
	});
}

.opacity-quasi-opaque-on-hover, .quasi-opaque-on-hover {
	#hover-only({
		.opacity-quasi-opaque;
	});
}

.opacity-full-on-hover, .opaque-on-hover {
	#hover-only({
		.opaque();
	});
}

.opacity-full-when-is-selected, .opaque-when-is-selected {
	&.is-selected {
		.opaque();
	}
}
 
//=========================
// = OPACITY CLASS
//=========================

.opacity-full, .opacity-opaque, .opaque {
	opacity: 1;
}

.opacity-very-opaque, .very-opaque {
	opacity: 0.9;
}

.opacity-quasi-opaque, .quasi-opaque {
	opacity: 0.8;
}

.opacity-semi-opaque, .semi-opaque {
	opacity: 0.7;
}

.opacity-partialy-opaque {
	opacity: 0.6;
}

.opacity-half, .opacity-half-transparent, .opacity-translucent, .translucent {
	opacity: 0.5;
}

.opacity-partialy-transparent, .opacity-partialy-translucent {
	opacity: 0.4;
}

.opacity-semi-transparent, .opacity-semi-translucent, .semi-translucent {
	opacity: 0.3;
}

.opacity-quasi-transparent, .opacity-quasi-translucent, .quasi-translucent, .quasi-trans {
	opacity: 0.2;
}

.opacity-quasi-transparent, .opacity-very-translucent, .very-translucent, .very-trans {
	opacity: 0.1;
}

.opacity-0, .opacity-transparent, .transparent {
	opacity: 0;
}

// FROM SM
.opacity-0-from-sm, .opacity-transparent-from-sm, .transparent-from-sm {
	#mq-min-width(@screen-sm, {
		.opacity-0;
	});
}

.opacity-half-from-sm, .opacity-half-transparent-from-sm, .opacity-translucent-from-sm, .translucent-from-sm {
	#mq-min-width(@screen-sm, {
		.opacity-half;
	});
}

// FROM MD
.opacity-0-from-md, .opacity-transparent-from-md, .transparent-from-md {
	#mq-min-width(@screen-md, {
		.opacity-0;
	});
}

.opacity-half-from-md, .opacity-half-transparent-from-md, .opacity-translucent-from-md, .translucent-from-md {
	#mq-min-width(@screen-md, {
		.opacity-half;
	});
}

//=========================
// = OVERFLOW CLASS
//=========================

.overflow-hidden 	{ overflow: hidden;  }
.overflow-visible 	{ overflow: visible; }
.overflow-scroll 	{ overflow: scroll;  }
.overflow-auto 		{ overflow: auto;    }

//Y AXIS
.overflow-y-hidden 	{ overflow-y: hidden;  }
.overflow-y-visible { overflow-y: visible; }
.overflow-y-scroll 	{ overflow-y: scroll;  }
.overflow-y-auto 	{ overflow-y: auto;    }

//X AXIS
.overflow-x-hidden 	{ overflow-x: hidden;  }
.overflow-x-visible { overflow-x: visible; }
.overflow-x-scroll 	{ overflow-x: scroll;  }
.overflow-x-auto 	{ overflow-x: auto;    }

//FROM SM
.overflow-y-scroll-from-sm {
	#mq-min-width(@screen-sm, {
		.overflow-y-scroll;
	});
}
//=====================================
// = PADDING CLASS
//=====================================

#generate-padding-classes (@direction: ~'', @suffix: ~'') {
	
	//-------------------------------------------
	// USEFULL PADDING 
	//-------------------------------------------
	#generate-padding-classes-value(@direction, @suffix, ~'0', 0);
	#generate-padding-classes-value(@direction, @suffix, ~'none', 0);
	#generate-padding-classes-value(@direction, @suffix, ~'none-important', ~'0 !important');
	
	//-------------------------------------------
	// SPACING PADDING 
	//-------------------------------------------
	#generate-padding-classes-value(@direction, @suffix, ~'atto', 				@spacing-atto);
	#generate-padding-classes-value(@direction, @suffix, ~'femto', 				@spacing-femto);
	#generate-padding-classes-value(@direction, @suffix, ~'pico', 				@spacing-pico);

	//#generate-padding-classes-value(@direction, @suffix, ~'half-nano', 		@spacing-nano * 0.5);

	#generate-padding-classes-value(@direction, @suffix, ~'nano', 				@spacing-nano);
	#generate-padding-classes-value(@direction, @suffix, ~'micro', 				@spacing-micro);
	#generate-padding-classes-value(@direction, @suffix, ~'xsmall', 			@spacing-xsmall);
	#generate-padding-classes-value(@direction, @suffix, ~'smallest', 			@spacing-smallest);

	//#generate-padding-classes-value(@direction, @suffix, ~'half-smaller', 	@spacing-smaller * 0.5);

	#generate-padding-classes-value(@direction, @suffix, ~'smaller', 			@spacing-smaller);

	//#generate-padding-classes-value(@direction, @suffix, ~'smaller-double', 	@spacing-smaller * 2);

	#generate-padding-classes-value(@direction, @suffix, ~'small', 				@spacing-small);
	#generate-padding-classes-value(@direction, @suffix, ~'mid', 				@spacing-mid);

	//#generate-padding-classes-value(@direction, @suffix, ~'half-large', 		@spacing-large * 0.5);

	#generate-padding-classes-value(@direction, @suffix, ~'large', 				@spacing-large);
	#generate-padding-classes-value(@direction, @suffix, ~'larger', 			@spacing-larger);
	#generate-padding-classes-value(@direction, @suffix, ~'largest', 			@spacing-largest);
	#generate-padding-classes-value(@direction, @suffix, ~'xlarge', 			@spacing-xlarge);
	#generate-padding-classes-value(@direction, @suffix, ~'huge', 				@spacing-huge);
	#generate-padding-classes-value(@direction, @suffix, ~'mega', 				@spacing-mega);
	#generate-padding-classes-value(@direction, @suffix, ~'giga', 				@spacing-giga);
	#generate-padding-classes-value(@direction, @suffix, ~'tera', 				@spacing-tera);
	#generate-padding-classes-value(@direction, @suffix, ~'peta', 				@spacing-peta);
	#generate-padding-classes-value(@direction, @suffix, ~'zetta', 				@spacing-zetta);
	#generate-padding-classes-value(@direction, @suffix, ~'yotta', 				@spacing-yotta);
	
	//-------------------------------------------
	// RATIONNAL PADDING
	//-------------------------------------------
	#generate-padding-classes-value(@direction, @suffix, ~'1_2', 50%);
	#generate-padding-classes-value(@direction, @suffix, ~'1_3', 100% / 3);
	#generate-padding-classes-value(@direction, @suffix, ~'2_3', 100% / 3 * 2);
	#generate-padding-classes-value(@direction, @suffix, ~'4_3', 100% / 3 * 4);
	
	#generate-padding-classes-value(@direction, @suffix, ~'1_4', 100% / 4);
	#generate-padding-classes-value(@direction, @suffix, ~'3_4', 100% / 4 * 3);
	
	#generate-padding-classes-value(@direction, @suffix, ~'1_5', 100% / 5);
	#generate-padding-classes-value(@direction, @suffix, ~'2_5', 100% / 5 * 2);
	#generate-padding-classes-value(@direction, @suffix, ~'3_5', 100% / 5 * 3);
	#generate-padding-classes-value(@direction, @suffix, ~'4_5', 100% / 5 * 4);
	
	#generate-padding-classes-value(@direction, @suffix, ~'1_6', 100% / 6);
	#generate-padding-classes-value(@direction, @suffix, ~'5_6', 100% / 6 * 5);
	
	#generate-padding-classes-value(@direction, @suffix, ~'1_7', 100% / 7);
	#generate-padding-classes-value(@direction, @suffix, ~'2_7', 100% / 7 * 2);
	#generate-padding-classes-value(@direction, @suffix, ~'3_7', 100% / 7 * 3);
	#generate-padding-classes-value(@direction, @suffix, ~'4_7', 100% / 7 * 4);
	#generate-padding-classes-value(@direction, @suffix, ~'5_7', 100% / 7 * 5);
	#generate-padding-classes-value(@direction, @suffix, ~'6_7', 100% / 7 * 6);
	
	#generate-padding-classes-value(@direction, @suffix, ~'1_8', 100% / 8);
	#generate-padding-classes-value(@direction, @suffix, ~'3_8', 100% / 8 * 3);
	#generate-padding-classes-value(@direction, @suffix, ~'5_8', 100% / 8 * 5);
	#generate-padding-classes-value(@direction, @suffix, ~'7_8', 100% / 8 * 7);
	
	#generate-padding-classes-value(@direction, @suffix, ~'1_9', 100% / 9);
	#generate-padding-classes-value(@direction, @suffix, ~'2_9', 100% / 9 * 2);
	#generate-padding-classes-value(@direction, @suffix, ~'4_9', 100% / 9 * 4);
	#generate-padding-classes-value(@direction, @suffix, ~'5_9', 100% / 9 * 5);
	#generate-padding-classes-value(@direction, @suffix, ~'7_9', 100% / 9 * 7);
	#generate-padding-classes-value(@direction, @suffix, ~'8_9', 100% / 9 * 8);
	
	#generate-padding-classes-value(@direction, @suffix, ~'1_10', 100% / 10);
	#generate-padding-classes-value(@direction, @suffix, ~'3_10', 100% / 10 * 3);
	#generate-padding-classes-value(@direction, @suffix, ~'7_10', 100% / 10 * 7);
	#generate-padding-classes-value(@direction, @suffix, ~'9_10', 100% / 10 * 9);
	
	#generate-padding-classes-value(@direction, @suffix, ~'9_16', 100% / 16 * 9);
	
	#generate-padding-classes-value(@direction, @suffix, ~'full', 100%);
}

#generate-padding-two-axes-classes(@direction, @axe1, @axe2, @suffix: ~'') {
	
	//-------------------------------------------
	// USEFULL TWO AXES PADDING 
	//-------------------------------------------
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'0', 0);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'none', 0);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'none-important', ~'0 !important');
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'auto', auto);

	//-------------------------------------------
	// SPACING TWO AXES PADDING 
	//-------------------------------------------
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'atto', 				@spacing-atto);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'femto', 			@spacing-femto);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'pico', 				@spacing-pico);

	//#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'half-nano', 		@spacing-nano * 0.5);

	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'nano', 				@spacing-nano);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'micro', 			@spacing-micro);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'xsmall', 			@spacing-xsmall);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'smallest', 			@spacing-smallest);

	//#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'half-smaller', 	@spacing-smaller * 0.5);

	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'smaller', 			@spacing-smaller);

	//#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'smaller-double', 	@spacing-smaller * 2);

	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'small', 			@spacing-small);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'mid', 				@spacing-mid);

	//#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'half-large', 		@spacing-large * 0.5);

	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'large', 			@spacing-large);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'larger', 			@spacing-larger);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'largest', 			@spacing-largest);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'xlarge', 			@spacing-xlarge);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'huge', 				@spacing-huge);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'mega', 				@spacing-mega);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'giga', 				@spacing-giga);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'tera', 				@spacing-tera);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'peta', 				@spacing-peta);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'zetta', 			@spacing-zetta);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'yotta', 			@spacing-yotta);
	
	//-------------------------------------------
	// RATIONNAL TWO AXES PADDING
	//-------------------------------------------
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_2', 50%);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'half', 50%);
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_3', 100% / 3);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'2_3', 100% / 3 * 2);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'4_3', 100% / 3 * 4);
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_4', 100% / 4);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_4', 100% / 4 * 3);
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_5', 100% / 5);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'2_5', 100% / 5 * 2);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_5', 100% / 5 * 3);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'4_5', 100% / 5 * 4);
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_6', 100% / 6);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'5_6', 100% / 6 * 5);
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_7', 100% / 7);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'2_7', 100% / 7 * 2);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_7', 100% / 7 * 3);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'4_7', 100% / 7 * 4);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'5_7', 100% / 7 * 5);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'6_7', 100% / 7 * 6);
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_8', 100% / 8);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_8', 100% / 8 * 3);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'5_8', 100% / 8 * 5);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'7_8', 100% / 8 * 7);
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_9', 100% / 9);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'2_9', 100% / 9 * 2);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'4_9', 100% / 9 * 4);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'5_9', 100% / 9 * 5);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'7_9', 100% / 9 * 7);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'8_9', 100% / 9 * 8);
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'1_10', 100% / 10);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'3_10', 100% / 10 * 3);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'7_10', 100% / 10 * 7);
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'9_10', 100% / 10 * 9);
	
	#generate-padding-two-axes-class-value(@direction, @suffix, @axe1, @axe2, ~'full', 100%);
}

//=====================================
// = POINTER-EVENTS CLASS
//=====================================

.pointer-events-none 	{ pointer-events: none; }
.pointer-events-all 	{ pointer-events: all;  }

//=====================================
// = POSITION CLASS
//=====================================
.position-absolute, .absolute 	{ position: absolute; }
.position-fixed, 	.fixed 		{ position: fixed; }
.position-relative, .relative 	{ position: relative; }

//=== POSITION === RESPONSIVE =========
// FROM PH
.absolute-from-ph {
	#mq-min-width(@screen-ph, {
		.absolute;
	});
}

// FROM XS
.position-absolute-from-xs, .absolute-from-xs {
	#mq-min-width(@screen-xs, {
		.absolute;
	});
}

// FROM SM
.position-absolute-from-sm, .absolute-from-sm {
	#mq-min-width(@screen-sm, {
		.absolute;
	});
}

.position-fixed-from-sm, .fixed-from-sm {
	#mq-min-width(@screen-sm, {
		.fixed;
	});
}

// FROM MD
.position-absolute-from-md, .absolute-from-md {
	#mq-min-width(@screen-md, {
		.absolute;
	});
}

// TO XS
.absolute-to-xs {
	#mq-max-width(@screen-xs - 1, {
		.absolute;
	});
}

//===========================
// = SQUARE CLASS
//===========================

//SPACING
.square-micro 		{ width: @spacing-micro; 		height: @spacing-micro;    }
.square-smallest 	{ width: @spacing-smallest; 	height: @spacing-smallest; }
.square-smaller 	{ width: @spacing-smaller; 		height: @spacing-smaller;  }
.square-small 		{ width: @spacing-small; 		height: @spacing-small;    }
.square-mid 		{ width: @spacing-mid; 			height: @spacing-mid;      }
.square-large 		{ width: @spacing-large; 		height: @spacing-large;    }
.square-larger 		{ width: @spacing-larger; 		height: @spacing-larger;   }
.square-largest 	{ width: @spacing-largest; 		height: @spacing-largest;  }
.square-huge 		{ width: @spacing-huge; 		height: @spacing-huge;     }

//DIMENSION
.square-skelettic 	{ width: @dimension-skelettic; 	height: @dimension-skelettic; }

.square-tiniest 	{ width: @dimension-tiniest; 	height: @dimension-tiniest;   }
.square-very-tiny 	{ width: @dimension-very-tiny; 	height: @dimension-very-tiny; }
.square-tinier 		{ width: @dimension-tinier; 	height: @dimension-tinier;    }
.square-tiny 		{ width: @dimension-tiny; 		height: @dimension-tiny;      }

.square-thinnest 	{ width: @dimension-thinnest; 	height: @dimension-thinnest;  }
.square-very-thin 	{ width: @dimension-very-thin; 	height: @dimension-very-thin; }
.square-thinner 	{ width: @dimension-thinner; 	height: @dimension-thinner;   }
.square-thin 		{ width: @dimension-thin; 		height: @dimension-thin;      }

.square-standard 	{ width: @dimension-standard; 	height: @dimension-standard;  }

.square-wide 		{ width: @dimension-wide; 		height: @dimension-wide;      }
.square-wider 		{ width: @dimension-wider; 		height: @dimension-wider;     }
.square-very-wide 	{ width: @dimension-very-wide; 	height: @dimension-very-wide; }
.square-widest 		{ width: @dimension-widest; 	height: @dimension-widest;    }

.square-fat 		{ width: @dimension-fat; 		height: @dimension-fat;       }
.square-fatter 		{ width: @dimension-fatter; 	height: @dimension-fatter;    }
.square-very-fat 	{ width: @dimension-very-fat; 	height: @dimension-very-fat;  }
.square-fattest 	{ width: @dimension-fattest; 	height: @dimension-fattest;   }

.square-obese 		{ width: @dimension-obese; 		height: @dimension-obese;     }
.square-morbid 		{ width: @dimension-morbid; 	height: @dimension-morbid;    }

//=== SQUARE ==== RESPONSIVE ==========
//=== TO SM ======

.square-mid-to-sm {
	#mq-max-width(@screen-sm - 1, {
		width: @spacing-mid;
		height: @spacing-mid;
	});
}

//=====================================
//=== TEXT-ALIGN CLASS
//=====================================

.text-align-center, .text-center, .talign-center {
	text-align: center;
}

.text-align-left, .text-left, .talign-left {
	text-align: left;
}

.text-align-right, .text-right, talign-right {
	text-align: right;
}

//=====================================
//=== TEXT-ALIGN     RESPONSIVE 
//=========== FROM PH =================

.text-right-from-ph {
	#mq-min-width(@screen-ph, {
		.text-right;
	});
}

//=========== FROM XS ===================
.text-left-from-xs {
	#mq-min-width(@screen-xs, {
		.text-left;
	});
}

.text-right-from-xs {
	#mq-min-width(@screen-xs, {
		.text-right;
	});
}

//=========== TO XS ===================

.text-center-to-xs {
	#mq-max-width(@screen-xs - 1, {
		.text-center;
	});
}

.text-right-to-xs {
	#mq-max-width(@screen-xs - 1, {
		.text-right;
	});
}

//=========== TO PH ===================

.text-center-to-ph {
	#mq-max-width(@screen-ph - 1, {
		.text-center;
	});
}

.text-right-to-ph {
	#mq-max-width(@screen-ph - 1, {
		.text-right;
	});
}

//=========== FROM PH TO XS ===========

.text-right-from-ph-to-xs {
	#mq-min-max-width(@screen-ph, @screen-xs - 1, {
		.text-right;
	});
}
 
//=========================
// = TEXT-DECORATION CLASS
//=========================

.text-decoration-overline, 	.overline 		{ text-decoration: overline; }
.text-decoration-underline, .underline 		{ text-decoration: underline; }
.text-decoration-none, 		.no-decoration 	{ text-decoration: none; }

// HOVER
.text-decoration-overline-on-hover, .overline-on-hover {
	#hover-only({
		.text-decoration-overline;
	});
}

.text-decoration-underline-on-hover, .underline-on-hover {
	#hover-only({
		.text-decoration-underline();
	});
}

.text-decoration-none-on-hover, .no-decoration-on-hover {
	#hover-only({
		.text-decoration-none();
	});
}
 
//=========================
// = TEXT-OVERFLOW CLASS
//=========================

.text-ellipsis {
	#ellipsis();
}

//=========================
// = TEXT-TRANSFORM CLASS
//=========================

.text-transform-capitalize, .text-capital, .text-capitalize {
	text-transform: capitalize;
}

.text-transform-upper, .text-upper, .upper, .text-uppercase {
	text-transform: uppercase;
}

.text-transform-none, .text-no-upper {
	text-transform: none;
}

.text-transform-lower, .text-lower, .text-lowercase {
	text-transform: lowercase;
}

//===========================
// = TOP, LEFT, RIGHT, BOTTOM AND BUNDLE CLASS
//===========================

.fill {
	#fill();
}

.fill-minus-1px {
	#fill(-1px);
}

.fill-minus-5 {
	#fill(-0.5rem);
}

//========= TOP =============

.top {
	top: 0;
}

.top-pico {
	top: @spacing-pico;
}

.top-nano {
	top: @spacing-nano;
}

.top-half-micro {
	top: @spacing-micro * 0.5;
}

.top-micro {
	top: @spacing-micro;
}

.top-smallest {
	top: @spacing-smallest;
}

.top-smaller {
	top: @spacing-smaller;
}

.top-small {
	top: @spacing-small;
}

.top-mid {
	top: @spacing-mid;
}

.top-large {
	top: @spacing-large;
}

.top-xlarge {
	top: @spacing-xlarge;
}

.top-50, .top-half, .top-50p {
	top: 50%;
}

//========= TOP MINUS =======

.top-minus-nano {
	top: -@spacing-nano;
}

.top-minus-pico {
	top: -@spacing-pico;
}

.top-minus-micro {
	top: -@spacing-micro;
}

// FROM SM
.top-minus-pico-from-sm {
	#mq-min-width(@screen-sm, {
		.top-minus-pico;
	});
}

//========= LEFT ============

.left {
	left: 0;
}

.left-half-nano {
 	left: @spacing-nano * .5;
}

.left-nano {
 	left: @spacing-nano;
}

.left-smallest{
	left: @spacing-smallest;
}

.left-smaller {
	left: @spacing-smaller;
}

.left-small {
	left: @spacing-small;
}

.left-mid {
	left: @spacing-mid;
}

.left-large {
	left: @spacing-large;
}

.left-larger {
	left: @spacing-larger;
}

.left-largest {
	left: @spacing-largest;
}

.left-quarter {
	left: 25%;
}

.left-half-width, .left-half, .left-50p {
 	left: 50%;
}

.left-full,
.left-100p,
.left-full-width {
 	left: 100%;
}

.left-minus-quarter {
	left: -25%;
}

// FROM SM
.left-minus-micro-from-sm {
	#mq-min-width(@screen-sm, {
		.left-minus-micro;
	});
}

.left-minus-smallest-from-sm {
	#mq-min-width(@screen-sm, {
		.left-minus-smallest;
	});
}

// FROM MD
.left-full-from-md,
.left-100p-from-md,
.left-full-width-from-md {
	#mq-min-width(@screen-md, {
		.left-full-width;
	});
}

//========= LEFT MINUS ======

.left-minus-micro {
 	left: -@spacing-micro;
}

.left-minus-micro-plus-nano {
 	left: -(@spacing-micro + @spacing-nano);
}

.left-minus-smallest {
	left: -@spacing-smallest;
}

.left-minus-smaller {
 	left: -@spacing-smaller;
}

.left-minus-small {
 	left: -@spacing-small;
}

.left-minus-largest {
	left: -@spacing-largest;
}

//========= RIGHT ===========

.right {
	right: 0;
}

.right-quarter {
	right: 25%;
}

.right-half,
.right-50p,
.right-half-width {
	right: 50%;
}

.right-half-from-sm,
.right-50p-from-sm,
.right-half-width-from-sm {
	#mq-min-width(@screen-sm, {
		.right-half;
	});
}

.right-full {
	right: 100%;
}

.right-minus-quarter {
	right: -25%;
}

//========= BOTTOM ==========

.bottom {
	bottom: 0;
}

.bottom-xlarge {
	bottom: @spacing-xlarge;
}

.bottom-full, .bottom-100p, .bottom-full-width {
	bottom: 100%;
}



//========= BOTTOM MINUS ====

.bottom-minus-smaller {
	bottom: -@spacing-smaller;
}

.bottom-minus-quarter {
	bottom: -25%;
}


//=====================================
//=== TRANSFORM ON HOVER CLASS
//=====================================

.translate-left-none-on-hover {
	#hover-only({
		.translate-x-0();
	});
}

.translate-left-smallest-on-hover {
	#hover-only({
		.translate-x-smallest();
	});
}


.translate-y-none-on-hover {
	#hover-only({
		.translate-y-none;
	});
}

.translate-y-minus-full-on-hover {
	#hover-only({
		.translate-y-minus-full;
	});
}

//=====================================
//=== TRANSFORM-ORIGIN CLASS
//=====================================

.transform-origin-left-center 	{ #transform-origin(left center); }
.transform-origin-center-bottom { #transform-origin(center bottom); }
.transform-origin-center-top 	{ #transform-origin(center top); }

//=====================================
//=== TRANSFORM CLASS
//=====================================
/**************************************
* REFLECTION
***************************************/
.reflect-horizontal {
	#transform(~'scaleX(-1)');
	#transform-origin(center center);
}

/**************************************
* ROTATION
***************************************/
.rotate-90deg, .rotate-vertical {
	#transform(~'rotateZ(90deg)');
}

.rotate-minus-90deg, .rotate-counter-vertical {
	#transform(~'rotateZ(-90deg)');
}

.rotate-180deg, .rotation-180deg {
	#transform(~'rotate(180deg)');
}

.rotate-minus-15deg {
	#transform(~'rotate(-15deg)');
}

/**************************************
* TRANSLATE X-Y
***************************************/
//Proportional Value Left Top
.translate-x-minus-half-y-minus-half, .translate-minus-half, .translate-xy-minus-half, .translate-top-left-minus-half {
	#transform(~'translate(-50%, -50%)');
}

//Proportional Value Right Top
.translate-x-full-y-minus-quarter, .translate-right-full-top-minus-quarter {
	#transform(~'translateY(-25%) translateX(100%)');
}


/**************************************
* TRANSLATE X
***************************************/
.translate-left-none, .translate-right-none {
	.DEPRECATED(~'Use translate-x-none');
	#transform(~'translateX(0)');
}

.translate-left-full {
	.DEPRECATED(~'Use translate-x-minus-full');
	#transform(~'translateX(-100%)');
}

//Zero Value
.translate-x-0, .translate-x-none {
	#transform(~'translateX(0)');
}

//Spacing Value
.translate-x-smallest, .translate-right-smallest {
	#transform(~'translateX(@{spacing-smallest})');
}

.translate-x-small {
	#transform(~'translateX(@{spacing-small})');
}

//Proportional Value
.translate-right-full {
	.DEPRECATED(~'Use translate-x-full');
	#transform(~'translateX(100%)');
}

.translate-x-half {
	#transform(translateX(50%));
}

.translate-x-full {
	#transform(~'translateX(100%)');
}

.translate-x-minus-smallest {
	#transform(~'translateX(-@{spacing-smallest})');
}

.translate-x-minus-full {
	#transform(~'translateX(-100%)');
}

/**************************************
* TRANSLATE Y
***************************************/
//Proportional Value  Top
.translate-y-0, .translate-y-none {
	#transform(~'translateY(0)');
}

.translate-y-nano, .translate-top-nano {
	#transform(~'translateY(@{spacing-nano})');
}

.translate-y-40p, .translate-top-40-percent {
	#transform(~'translateY(40%)');
}

.translate-y-half, .translate-y-1_2 {
	#transform(~'translateY(50%)');
}

.translate-y-3_4 {
	#transform(~'translateY(75%)');
}

.translate-y-full {
	#transform(~'translateY(100%)');
}

.translate-y-viewport-fourth, .translate-viewport-bottom-fourth {
	.DEPRECATED(~'Use translate-y-3_4-viewport');
	#transform(~'translateY(75vh)');
}

.translate-y-3_4-viewport {
	#transform(~'translateY(75vh)');
}

.translate-y-full-viewport {
	#transform(~'translateY(100vh)');
}

.translate-y-minus-quarter, .translate-y-minus-quart, .translate-top-minus-quarter, .translate-top-minus-quart {
	.DEPRECATED(~'Use translate-y-minus-1_4');
	#transform(~'translateY(-25%)');
}

.translate-y-minus-1_4 {
	#transform(~'translateY(-25%)');
}

.translate-y-minus-1_3 {
	#transform(~'translateY(-33.33%)');
}

.translate-y-minus-half, .translate-top-minus-half {
	#transform(~'translateY(-50%)');
}

.translate-y-minus-3_8 {
	#transform(~'translateY(-100% / 8 * 3)');
}

.translate-y-minus-90-percent {
	.DEPRECATED(~'Use translate-y-minus-9_10');
	#transform(~'translateY(-90%)');
}

.translate-y-minus-9_10 {
	#transform(~'translateY(-90%)');
}

.translate-y-minus-full {
	#transform(~'translateY(-100%)');
}

/**************************************
* TRANSLATE Z
***************************************/
.translate-z-0 {
	#transform(translateZ(0));
}

.translate-z-1px {
	#transform(translateZ(1px));
}

/**************************************
* SCALE
***************************************/

.scale-50 {
	#transform(~'scale(0.5)');
}

.scale-100 {
	#transform(~'scale(1)');
}

.scale-120 {
	#transform(~'scale(1.2)');
}

.scale-y-half{
	#transform(~'scaleY(0.5)');
}

.scale-x-half {
	#transform(~'scaleX(0.5)');
}

.scale-x-double {
	#transform(~'scaleX(2)');
}


// FROM XS
.translate-x-half-from-xs {
	#mq-min-width(@screen-xs, {
		#transform(translateX(50%));
	});
}

.translate-y-minus-quarter-from-xs, .translate-y-minus-quart-from-xs, .translate-top-minus-quarter-from-xs, .translate-top-minus-quarter-from-xs {
	#mq-min-width(@screen-xs, {
		.translate-top-minus-quart;
	});
}

// FROM SM
.translate-xy-minus-half-from-sm {
	#mq-min-width(@screen-sm, {
		#transform(~'translate(-50% -50%)');
	});
}

.translate-x-minus-full-from-sm {
	#mq-min-width(@screen-sm, {
		#transform(~'translateX(-100%)');
	});
}


.translate-y-minus-half-from-sm, .translate-top-minus-half-from-sm {
	#mq-min-width(@screen-sm, {
		.translate-top-minus-half;
	});
}

.translate-y-minus-full-from-sm {
	#mq-min-width(@screen-sm, {
		.translate-y-minus-full;
	});
}

// FROM MD
.translate-x-minus-full-from-md {
	#mq-min-width(@screen-md, {
		#transform(~'translateX(-100%)');
	});
}

.translate-y-minus-full-from-md {
	#mq-min-width(@screen-md, {
		#transform(~'translateY(-100%)');
	});
}

.translate-y-full-from-md {
	#mq-min-width(@screen-md, {
		#transform(~'translateY(100%)');
	});
}

//=====================================
//=== TRANSITION CLASS
//=====================================
//DEPRECATED
.transition-color-short-ease {
	.DEPRECATED(~'Use multiples classes to recreat the behavior');
	#transition(~'color @{duration-short} @{ease}');
}

.transition-opacity-short-ease {
	.DEPRECATED(~'Use multiples classes to recreat the behavior');
	#transition(opacity @duration-short @ease);
}

// GOOD CLASSES
// PROPERTIES
.transition-bg-color 				{ #transition-property 		(~'background-color'); }
.transition-bg-color-opacity 		{ #transition-property 		(~'background-color, opacity'); }
.transition-bottom 					{ #transition-property 		(~'bottom'); }
.transition-border-color 			{ #transition-property 		(~'border-color'); }
.transition-color 					{ #transition-property 		(~'color'); }
.transition-color-border-color 		{ #transition-property 		(~'border-color'); }
.transition-color-opacity 			{ #transition-property 		(~'color, opacity'); }
.transition-color-visibility 		{ #transition-property 		(~'color, visibility'); }
.transition-height 					{ #transition-property 		(~'height'); }
.transition-height-visibility 		{ #transition-property 		(~'height, visibility'); }
.transition-left 					{ #transition-property 		(~'left'); }
.transition-max-height 				{ #transition-property 		(~'max-height'); }
.transition-max-height-opacity 		{ #transition-property 		(~'max-height, opacity'); }
.transition-max-height-visibility 	{ #transition-property 		(~'max-height, visibility'); }
.transition-max-width 				{ #transition-property 		(~'max-width'); }
.transition-max-width-opacity 		{ #transition-property 		(~'max-width, opacity'); }
.transition-max-width-visibility 	{ #transition-property 		(~'max-width, visibility'); }
.transition-opacity 				{ #transition-property 		(~'opacity'); }
.transition-opacity-visibility 		{ #transition-property 		(~'opacity, visibility'); }
.transition-right 					{ #transition-property 		(~'right'); }
.transition-top 					{ #transition-property 		(~'top'); }
.transition-transform 				{ #cb-transition-property 	(~'transform'); }
.transition-transform-font 			{ #cb-transition-property 	(~'transform, font'); }
.transition-transform-opacity 		{ #cb-transition-property 	(~'transform, opacity'); }
.transition-width 					{ #transition-property 		(~'width'); }
.transition-visibility 				{ #transition-property 		(~'visibility'); }
.transition-visibility-opacity 		{ #transition-property 		(~'visibility'); }

// DURATIONS
.transition-duration-0 				{ #transition-duration 		(0); }
.transition-duration-shortest 		{ #transition-duration 		(@duration-shortest); }
.transition-duration-shorter 		{ #transition-duration 		(@duration-shorter); }
.transition-duration-short 			{ #transition-duration 		(@duration-short); }
.transition-duration 				{ #transition-duration 		(@duration); }
.transition-duration-long 			{ #transition-duration 		(@duration-long); }
.transition-duration-longer 		{ #transition-duration 		(@duration-longer); }
.transition-duration-longest 		{ #transition-duration 		(@duration-longest); }
.transition-duration-mega 			{ #transition-duration 		(@duration-mega); }
.transition-duration-huge 			{ #transition-duration 		(@duration-huge); }

// DELAY
.transition-delay-shortest 			{ #transition-delay 		(@duration-shortest); }
.transition-delay-shorter 			{ #transition-delay 		(@duration-shorter); }
.transition-delay-short 			{ #transition-delay 		(@duration-short); }
.transition-delay 					{ #transition-delay 		(@duration); }
.transition-delay-long 				{ #transition-delay 		(@duration-long); }
.transition-delay-longer 			{ #transition-delay 		(@duration-longer); }
.transition-delay-longest 			{ #transition-delay 		(@duration-longest); }
.transition-delay-mega 				{ #transition-delay 		(@duration-mega); }
.transition-delay-huge 				{ #transition-delay 		(@duration-huge); }

// EASING
.transition-ease{ transition-timing-function: @ease; }
.transition-ease-linear { 
	-webkit-transition-timing-function: linear; /* Safari and Chrome */
	transition-timing-function: linear;
}

.transition-ease-in{ transition-timing-function: @ease-in; }
.transition-ease-out{ transition-timing-function: @ease-out; }
.transition-ease-in-out{ transition-timing-function: @ease-in-out; }

.transition-ease-quart-in-out{ transition-timing-function: @ease-quart-in-out; }

.transition-ease-quad-in-out{ transition-timing-function: @ease-quad-in-out; }
.transition-ease-quad-out{ transition-timing-function: @ease-quad-out; }

.transition-ease-quint-out{ transition-timing-function: @ease-quint-out; }

.transition-ease-circ-in-out{ transition-timing-function: @ease-circ-in-out; }
.transition-ease-circ-out{ transition-timing-function: @ease-circ-out; }
.transition-ease-circ-in{ transition-timing-function: @ease-circ-in; }

.transition-ease-expo-in{ transition-timing-function: @ease-expo-in; }

.transition-ease-back-in{ transition-timing-function: @ease-back-in; }

.noanim {
	&, & * {
		#transition(none) !important;
	}
}

.transition-none 			{ #transition(none); }
.transition-none-important 	{ #transition(none) !important; }

//=========================
// = VERTICAL-ALIGN CLASS
//=========================

.vertical-align-top, 	.valign-top 	{ vertical-align: top;    }
.vertical-align-bottom, .valign-bottom 	{ vertical-align: bottom; }
.vertical-align-middle, .valign-middle 	{ vertical-align: middle; }

//=========================
// = VISIBILITY CLASS
//=========================

#generate-visibility-classes (@suffix: ~'') {
	
	.visibility-collapse@{suffix},
	.collapse@{suffix} {
		visibility: collapse;
	}

	.visibility-hidden@{suffix},
	.not-visible@{suffix} {
		visibility: hidden;
	}
	
	.visibility-visible@{suffix},
	.visible@{suffix} {
		visibility: visible;
	}
}

//=========================
// = WHITE-SPACE CLASS
//=========================

.white-space-nowrap, .text-nowrap 	{ white-space: nowrap; }
.white-space-normal 				{ white-space: normal; }

//=========================
// = WIDTH CLASS
//=========================
// DEPRECATED
.width-2_4 				{ .DEPRECATED(~'Use width-1_2'); }
.with-third 			{ .DEPRECATED(~'Use width-1_3'); }
.width-quarter 			{ width: 25%; .DEPRECATED(~''); }
.width-30-percent 		{ width: 30%; .DEPRECATED(~''); }
.width-40-percent 		{ width: 40%; .DEPRECATED(~''); }
.half-width 			{ width: 50%; .DEPRECATED(~'Use width-half'); }
.width-60-percent 		{ width: 60%; .DEPRECATED(~'Use width-3_5'); }
.width-70-percent 		{ width: 70%; .DEPRECATED(~''); }
.width-three-quarter 	{ width: 75%; .DEPRECATED(~'Use width-3_4'); }
.full-width 			{ width: 100%; .DEPRECATED(~'Use width-full'); }
.full-viewport-width 	{ width: 100vw; .DEPRECATED(~'Use width-full-viewport'); }

#generate-width-classes (@suffix: ~'') {
	//-------------------------------------------
	// USEFULL WIDTH 
	//-------------------------------------------
	#generate-all-width-class(@suffix, ~'auto',				 ~'auto');
	#generate-all-width-class(@suffix, ~'auto-important',	 ~'auto !important');
	#generate-all-width-class(@suffix, ~'0', 				 ~'0');
	#generate-all-width-class(@suffix, ~'0-important',		 ~'0 !important');

	//-------------------------------------------
	// SPACING WIDTH 
	//-------------------------------------------
	#generate-all-width-class(@suffix, ~'micro', 		 @spacing-micro    );
	#generate-all-width-class(@suffix, ~'smallest', 	 @spacing-smallest );
	#generate-all-width-class(@suffix, ~'smaller', 		 @spacing-smaller  );
	#generate-all-width-class(@suffix, ~'small', 		 @spacing-small    );
	#generate-all-width-class(@suffix, ~'mid', 			 @spacing-mid      );
	#generate-all-width-class(@suffix, ~'large', 		 @spacing-large    );
	#generate-all-width-class(@suffix, ~'larger', 		 @spacing-larger   );
	#generate-all-width-class(@suffix, ~'largest', 		 @spacing-largest  );
	#generate-all-width-class(@suffix, ~'large', 		 @spacing-large    );
	#generate-all-width-class(@suffix, ~'xlarge', 		 @spacing-xlarge   );
	#generate-all-width-class(@suffix, ~'huge', 		 @spacing-huge     );
	#generate-all-width-class(@suffix, ~'giga', 		 @spacing-giga     );

	//-------------------------------------------
	// DIMENSION WIDTH 
	//-------------------------------------------
	#generate-all-width-class(@suffix, ~'skelettic', 	 @dimension-skelettic );

	#generate-all-width-class(@suffix, ~'tiniest', 		 @dimension-tiniest   );
	#generate-all-width-class(@suffix, ~'very-tiny', 	 @dimension-very-tiny );
	#generate-all-width-class(@suffix, ~'tinier', 		 @dimension-tinier    );
	#generate-all-width-class(@suffix, ~'tiny', 		 @dimension-tiny      );

	#generate-all-width-class(@suffix, ~'thinnest', 	 @dimension-thinnest  );
	#generate-all-width-class(@suffix, ~'very-thin', 	 @dimension-very-thin );
	#generate-all-width-class(@suffix, ~'thinner', 		 @dimension-thinner   );
	#generate-all-width-class(@suffix, ~'thin', 		 @dimension-thin      );

	#generate-all-width-class(@suffix, ~'standard', 	 @dimension-standard  );

	#generate-all-width-class(@suffix, ~'wide', 		 @dimension-wide      );
	#generate-all-width-class(@suffix, ~'wider', 		 @dimension-wider     );
	#generate-all-width-class(@suffix, ~'very-wide', 	 @dimension-very-wide );
	#generate-all-width-class(@suffix, ~'widest', 		 @dimension-widest    );

	#generate-all-width-class(@suffix, ~'fat', 			 @dimension-fat       );
	#generate-all-width-class(@suffix, ~'fatter', 		 @dimension-fatter    );
	#generate-all-width-class(@suffix, ~'very-fat', 	 @dimension-very-fat  );
	#generate-all-width-class(@suffix, ~'fattest', 		 @dimension-fattest   );

	#generate-all-width-class(@suffix, ~'obese', 		 @dimension-obese     );
	#generate-all-width-class(@suffix, ~'morbid', 		 @dimension-morbid    );

	//-------------------------------------------
	// SCREEN WIDTH
	//-------------------------------------------
	#generate-all-width-class(@suffix, ~'ip', @dimension-ip );
	#generate-all-width-class(@suffix, ~'ph', @dimension-ph );
	#generate-all-width-class(@suffix, ~'xs', @dimension-xs );
	#generate-all-width-class(@suffix, ~'sm', @dimension-sm );
	#generate-all-width-class(@suffix, ~'md', @dimension-md );
	#generate-all-width-class(@suffix, ~'lg', @dimension-lg );
	#generate-all-width-class(@suffix, ~'xl', @dimension-xl );
	#generate-all-width-class(@suffix, ~'hd', @dimension-hd );
	#generate-all-width-class(@suffix, ~'2k', @dimension-2k );
	#generate-all-width-class(@suffix, ~'4k', @dimension-4k );

	//------------------------------
	//	WIDTHS COLS
	//-------------------------------

	#generate-all-width-class(@suffix, ~'1_2', 	50% );
	#generate-all-width-class(@suffix, ~'half', 50% );				//DEPRECATED

	#generate-all-width-class(@suffix, ~'1_3', 100% / 3     );
	#generate-all-width-class(@suffix, ~'third', 100% / 3   );		//DEPRECATED
	#generate-all-width-class(@suffix, ~'2_3', 100% / 3 * 2 );

	#generate-all-width-class(@suffix, ~'1_4', 100% / 4     );
	#generate-all-width-class(@suffix, ~'2_4', 100% / 4 * 2 );		//DEPRECATED
	#generate-all-width-class(@suffix, ~'3_4', 100% / 4 * 3 );

	#generate-all-width-class(@suffix, ~'1_5', 100% / 5     );
	#generate-all-width-class(@suffix, ~'2_5', 100% / 5 * 2 );
	#generate-all-width-class(@suffix, ~'3_5', 100% / 5 * 3 );
	#generate-all-width-class(@suffix, ~'4_5', 100% / 5 * 4 );

	#generate-all-width-class(@suffix, ~'1_6', 100% / 6     );
	#generate-all-width-class(@suffix, ~'5_6', 100% / 6 * 5 );

	#generate-all-width-class(@suffix, ~'1_12',  100% / 12      );
	#generate-all-width-class(@suffix, ~'2_12',  100% / 12 *  2 ); 	//DEPRECATED
	#generate-all-width-class(@suffix, ~'3_12',  100% / 12 *  3 ); 	//DEPRECATED
	#generate-all-width-class(@suffix, ~'4_12',  100% / 12 *  4 ); 	//DEPRECATED
	#generate-all-width-class(@suffix, ~'5_12',  100% / 12 *  5 );
	#generate-all-width-class(@suffix, ~'6_12',  100% / 12 *  6 ); 	//DEPRECATED
	#generate-all-width-class(@suffix, ~'7_12',  100% / 12 *  7 );
	#generate-all-width-class(@suffix, ~'8_12',  100% / 12 *  8 ); 	//DEPRECATED
	#generate-all-width-class(@suffix, ~'9_12',  100% / 12 *  9 ); 	//DEPRECATED
	#generate-all-width-class(@suffix, ~'10_12', 100% / 12 * 10 );	//DEPRECATED
	#generate-all-width-class(@suffix, ~'11_12', 100% / 12 * 11 );

	#generate-all-width-class(@suffix, ~'1', 	100% );				//DEPRECATED
	#generate-all-width-class(@suffix, ~'full', 100% );

	#generate-all-width-class(@suffix, ~'full-viewport', 100vw );
	#generate-all-width-class(@suffix, ~'screen-max', @screen-max );
}


// WIDTH RESPONSIVE

// FROM IP

// FROM PH
.width-quarter-from-ph {
	#mq-min-width(@screen-ph, {
		//DEPRECATED
		.width-quarter;
	});
}

.half-width-ph {
	#mq-max-width((@screen-xs - 1), {
		//DEPRECATED
		.half-width();
	});
}

// FROM XS
.width-30-percent-from-xs {
	#mq-min-width(@screen-xs, {
		//DEPRECATED
		.width-30-percent;
	});
}

.width-quarter-from-xs {
	#mq-min-width(@screen-xs, {
		//DEPRECATED
		.width-quarter;
	});
}

// FROM SM
.width-quarter-from-sm {
	#mq-min-width(@screen-sm, {
		//DEPRECATED
		.width-quarter;
	});
}

.width-30-percent-from-sm {
	#mq-min-width(@screen-sm, {
		//DEPRECATED
		.width-30-percent;
	});
}

// TO XS
.width-40-percent-to-xs {
	#mq-max-width(@screen-xs - 1, {
		//DEPRECATED
		.width-40-percent;
	});
}

.full-width-to-xs {
	#mq-max-width(@screen-xs - 1, {
		//DEPRECATED
		.full-width;
	});
}

// TO PH

.full-width-to-ph {
	#mq-max-width(@screen-ph - 1, {
		//DEPRECATED
		.full-width;
	});
}

//=========================
// = ZINDEX CLASS
//=========================

.z-index-minus-1 	{ z-index:      -1; }
.z-index-1 			{ z-index:       1; }
.z-index-5 			{ z-index:       5; }
.z-index-10 		{ z-index:      10; }
.z-index-15 		{ z-index:      15; }
.z-index-20 		{ z-index:      20; }
.z-index-25 		{ z-index:      25; }
.z-index-50 		{ z-index:      50; }
.z-index-100 		{ z-index:     100; }
.z-index-200 		{ z-index:     200; }
.z-index-300 		{ z-index:     300; }
.z-index-400 		{ z-index:     400; }
.z-index-500 		{ z-index:     500; }
.z-index-1000 		{ z-index:    1000; }
.z-index-2000 		{ z-index:    2000; }
.z-index-3000 		{ z-index:    3000; }
.z-index-4000 		{ z-index:    4000; }
.z-index-5000 		{ z-index:    5000; }
.z-index-10000 		{ z-index:   10000; }
.z-index-100000 	{ z-index:  100000; }
.z-index-500000 	{ z-index:  500000; }
.z-index-1000000 	{ z-index: 1000000; }
.z-index-max 		{ z-index: 9999999; }
#generate-display-classes();
#generate-visibility-classes();

#generate-padding-all-classes() ;
#generate-margin-all-classes() ;

#generate-base-color-class();
#generate-width-classes ();

// FROM
#mq-min-width(@screen-ip, {
	#generate-display-classes(~'-from-ip');
	#generate-visibility-classes(~'-from-ip');
	#generate-padding-all-classes(~'-from-ip');
	#generate-margin-all-classes(~'-from-ip');
	#generate-base-color-class(~'-from-ip');
	#generate-width-classes(~'-from-ip');
	
});

#mq-min-width(@screen-ph, {
	#generate-display-classes(~'-from-ph');
	#generate-visibility-classes(~'-from-ph');
	#generate-padding-all-classes(~'-from-ph');
	#generate-margin-all-classes(~'-from-ph');
	#generate-base-color-class(~'-from-ph');
	#generate-width-classes(~'-from-ph');
});

#mq-min-width(@screen-xs, {
	#generate-display-classes(~'-from-xs');
	#generate-visibility-classes(~'-from-xs');
	#generate-padding-all-classes(~'-from-xs');
	#generate-margin-all-classes(~'-from-xs');
	#generate-base-color-class(~'-from-xs');
	#generate-width-classes(~'-from-xs');
});

#mq-min-width(@screen-sm, {
	#generate-display-classes(~'-from-sm');
	#generate-visibility-classes(~'-from-sm');
	#generate-padding-all-classes(~'-from-sm');
	#generate-margin-all-classes(~'-from-sm');
	#generate-base-color-class(~'-from-sm');
	#generate-width-classes(~'-from-sm');
});

#mq-min-width(@screen-md, {
	#generate-display-classes(~'-from-md');
	#generate-visibility-classes(~'-from-md');
	#generate-padding-all-classes(~'-from-md');
	#generate-margin-all-classes(~'-from-md');
	#generate-base-color-class(~'-from-md');
	#generate-width-classes(~'-from-md');
});

#mq-min-width(@screen-lg, {
	#generate-display-classes(~'-from-lg');
	#generate-visibility-classes(~'-from-lg');
	#generate-padding-all-classes(~'-from-lg');
	#generate-margin-all-classes(~'-from-lg');
	#generate-base-color-class(~'-from-lg');
	#generate-width-classes(~'-from-lg');
});

#mq-min-width(@screen-xl, {
	#generate-display-classes(~'-from-xl');
	#generate-visibility-classes(~'-from-xl');
	#generate-padding-all-classes(~'-from-xl');
	#generate-margin-all-classes(~'-from-xl');
	#generate-base-color-class(~'-from-xl');
	#generate-width-classes(~'-from-xl');
});

#mq-min-width(@screen-hd, {
	#generate-display-classes(~'-from-hd');
	#generate-visibility-classes(~'-from-hd');
	#generate-padding-all-classes(~'-from-hd');
	#generate-margin-all-classes(~'-from-hd');
	#generate-base-color-class(~'-from-hd');
	#generate-width-classes(~'-from-hd');
});

// TO
#mq-max-width(@screen-hd - 1, {
	#generate-display-classes(~'-to-hd');
	#generate-visibility-classes(~'-to-hd');
	#generate-padding-all-classes(~'-to-hd');
	#generate-margin-all-classes(~'-to-hd');
	#generate-base-color-class(~'-to-hd');
	#generate-width-classes(~'-to-hd');
});

#mq-max-width(@screen-xl - 1, {
	#generate-display-classes(~'-to-xl');
	#generate-visibility-classes(~'-to-xl');
	#generate-padding-all-classes(~'-to-xl');
	#generate-margin-all-classes(~'-to-xl');
	#generate-base-color-class(~'-to-xl');
	#generate-width-classes(~'-to-xl');
});

#mq-max-width(@screen-lg - 1, {
	#generate-display-classes(~'-to-lg');
	#generate-visibility-classes(~'-to-lg');
	#generate-padding-all-classes(~'-to-lg');
	#generate-margin-all-classes(~'-to-lg');
	#generate-base-color-class(~'-to-lg');
	#generate-width-classes(~'-to-lg');
});

#mq-max-width(@screen-md - 1, {
	#generate-display-classes(~'-to-md');
	#generate-visibility-classes(~'-to-md');
	#generate-padding-all-classes(~'-to-md');
	#generate-margin-all-classes(~'-to-md');
	#generate-base-color-class(~'-to-md');
	#generate-width-classes(~'-to-md');
});

#mq-max-width(@screen-sm - 1, {
	#generate-display-classes(~'-to-sm');
	#generate-visibility-classes(~'-to-sm');
	#generate-padding-all-classes(~'-to-sm');
	#generate-margin-all-classes(~'-to-sm');
	#generate-base-color-class(~'-to-sm');
	#generate-width-classes(~'-to-sm');
});

#mq-max-width(@screen-xs - 1, {
	#generate-display-classes(~'-to-xs');
	#generate-visibility-classes(~'-to-xs');
	#generate-padding-all-classes(~'-to-xs');
	#generate-margin-all-classes(~'-to-xs');
	#generate-base-color-class(~'-to-xs');
	#generate-width-classes(~'-to-xs');
});

#mq-max-width(@screen-ph - 1, {
	#generate-display-classes(~'-to-ph');
	#generate-visibility-classes(~'-to-ph');
	#generate-padding-all-classes(~'-to-ph');
	#generate-margin-all-classes(~'-to-ph');
	#generate-base-color-class(~'-to-ph');
	#generate-width-classes(~'-to-ph');
});

// FROM PH TO SM
.padding-large-from-ph-to-sm {
	#mq-min-max-width(@screen-ph, @screen-sm - 1, {
		padding: @spacing-large;
	});
}
