/*******************************
 * @author DeuxHuitHuit
 *****************************/

//=========================
// = MIXINS
//=========================

#marpad (@width: 0) {
	padding: @width;
	margin: @width;
}

/* *************************** SIZE FCT ****** */
#wh (@width: 100%, @height: @width) {
	width: @width;
	height: @height;
}

#sq (@side) {
	#wh(@side, @side);
}

#fill (@top: 0, @right: @top, @bottom: @top, @left: @top) {
	top: @top;
	left: @left;
	right: @right;
	bottom: @bottom;
}

/* *************************** DISPLAY FCT ****** */
#block () {
	display: block;
}

#ib (@valign: top) {
	display: inline-block;
	vertical-align: @valign;
}

/* *************************** POSITION FCT ****** */

// ***** Absolute *****
#absolute () {
	position: absolute;
}

#absolute (@zindex) {
	position: absolute;
	z-index: @zindex;
}

// ***** Relative *****
#relative () {
	position: relative;
}

#relative (@zindex) {
	#relative();
	z-index: @zindex;
}

// ***** Fixed *****
#fixed () {
	position: fixed;
}

#fixed (@zindex: 10) {
	.fixed;
	z-index: @zindex;
}


/* *************************** CENTER FCT ****** */
#vh-center (@top-offset: 0px, @left-offset: @top-offset) {
	#absolute();
	top: 50%;
	left: 50%;
	margin-left: -@top-offset;
	margin-top: -@left-offset;
}

/* *************************** TEXT FCT (wrap, ellipsis)****** */
#text-wrap (@val: break-word) {
	overflow-wrap: @val;
	word-wrap: @val;
}

#ellipsis (@mw: 100%) {
	max-width: @mw;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

/* *************************** BOX SHADOW FCT ****** */
#box-shadow (@shadow) {
	-webkit-box-shadow: @shadow;
	        box-shadow: @shadow;
}

/* *************************** OUTLINE FCT ****** */
#no-outline () {
	outline:none;
	-moz-outline:none;
	-webkit-outline:none;
}

/* *************************** SELECTION COLOR FCT ****** */
#selection-color (@color) when (iscolor(@color)) {
	::selection {
		background-color: @color;
	}
	
	::-moz-selection {
		background-color: @color;
	}
}

#selection-color (@rules) when (false = iscolor(@rules)) {
	::selection {
		@rules();
	}
	
	::-moz-selection {
		@rules();
	}
}